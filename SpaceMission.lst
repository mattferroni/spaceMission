

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Thu Apr 10 15:33:03 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
    45  2007  23E2               	dw 0x23E2 ;#
    46                           	FNCALL	_main,_lcd_init
    47                           	FNCALL	_main,_lcd_clear
    48                           	FNCALL	_main,_lcd_puts
    49                           	FNCALL	_main,_initCountDown
    50                           	FNCALL	_main,_updateSpace
    51                           	FNCALL	_main,_endMission
    52                           	FNCALL	_main,_displayCountDown
    53                           	FNCALL	_main,_displayPoints
    54                           	FNCALL	_main,_displaySpace
    55                           	FNCALL	_main,_updateAsteroidsSpeed
    56                           	FNCALL	_lcd_init,_lcd_write
    57                           	FNCALL	_lcd_init,_lcd_clear
    58                           	FNCALL	_displaySpace,_lcd_clear
    59                           	FNCALL	_displaySpace,_lcd_puts
    60                           	FNCALL	_lcd_puts,_lcd_write
    61                           	FNCALL	_lcd_clear,_lcd_write
    62                           	FNCALL	_updateSpace,_generateAsteroid
    63                           	FNCALL	_updateSpace,_checkCollision
    64                           	FNROOT	_main
    65                           	FNCALL	intlevel1,_isr
    66                           	global	intlevel1
    67                           	FNROOT	intlevel1
    68                           	global	_line0
    69                           	global	_line1
    70                           psect	idataBANK0,class=CODE,space=0,delta=2
    71                           global __pidataBANK0
    72  023B                     __pidataBANK0:
    73                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
    74                           	line	31
    75                           
    76                           ;initializer for _line0
    77  023B  342D               	retlw	02Dh
    78  023C  342D               	retlw	02Dh
    79  023D  342D               	retlw	02Dh
    80  023E  342D               	retlw	02Dh
    81  023F  342D               	retlw	02Dh
    82  0240  342D               	retlw	02Dh
    83  0241  342D               	retlw	02Dh
    84  0242  342D               	retlw	02Dh
    85  0243  342D               	retlw	02Dh
    86  0244  342D               	retlw	02Dh
    87  0245  342D               	retlw	02Dh
    88  0246  342D               	retlw	02Dh
    89  0247  342D               	retlw	02Dh
    90  0248  342D               	retlw	02Dh
    91  0249  342D               	retlw	02Dh
    92  024A  342D               	retlw	02Dh
    93                           	line	32
    94                           
    95                           ;initializer for _line1
    96  024B  342D               	retlw	02Dh
    97  024C  342D               	retlw	02Dh
    98  024D  342D               	retlw	02Dh
    99  024E  342D               	retlw	02Dh
   100  024F  342D               	retlw	02Dh
   101  0250  342D               	retlw	02Dh
   102  0251  342D               	retlw	02Dh
   103  0252  342D               	retlw	02Dh
   104  0253  342D               	retlw	02Dh
   105  0254  342D               	retlw	02Dh
   106  0255  342D               	retlw	02Dh
   107  0256  342D               	retlw	02Dh
   108  0257  342D               	retlw	02Dh
   109  0258  342D               	retlw	02Dh
   110  0259  342D               	retlw	02Dh
   111  025A  342D               	retlw	02Dh
   112                           	global	_map
   113                           psect	strings,class=STRING,delta=2
   114                           global __pstrings
   115  0015                     __pstrings:
   116                           ;	global	stringdir,stringtab,__stringbase
   117  0015                     stringtab:
   118                           ;	String table - string pointers are 1 byte each
   119  0015  1BFF               	btfsc	(btemp+1),7
   120  0016  281F               	ljmp	stringcode
   121  0017  1383               	bcf	status,7
   122  0018  187F               	btfsc	(btemp+1),0
   123  0019  1783               	bsf	status,7
   124  001A  0800               	movf	indf,w
   125  001B  0A84               	incf fsr
   126  001C  1903               skipnz
   127  001D  0AFF               incf btemp+1
   128  001E  0008               	return
   129  001F                     stringcode:stringdir:
      + 001F                     stringdir:	
   130  001F  3000               movlw high(stringdir)
   131  0020  008A               movwf pclath
   132  0021  0804               movf fsr,w
   133  0022  0A84               incf fsr
   134  0023  0782               	addwf pc
   135  0024                     __stringbase:
   136  0024  3400               	retlw	0
   137                           psect	strings
   138                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
   139                           	line	15
   140  0025                     _map:
   141  0025  343F               	retlw	03Fh
   142  0026  3406               	retlw	06h
   143  0027  345B               	retlw	05Bh
   144  0028  344F               	retlw	04Fh
   145  0029  3466               	retlw	066h
   146  002A  346D               	retlw	06Dh
   147  002B  347D               	retlw	07Dh
   148  002C  3407               	retlw	07h
   149  002D  347F               	retlw	07Fh
   150  002E  346F               	retlw	06Fh
   151                           	global	_map
   152                           	global	_points
   153                           	global	_digit0
   154                           	global	_digit1
   155                           	global	_divider
   156                           	global	_indexLines
   157                           	global	_status
   158                           	global	_INTCON
   159  000B                     _INTCON	set	11
   160                           	global	_PORTB
   161  0006                     _PORTB	set	6
   162                           	global	_PORTD
   163  0008                     _PORTD	set	8
   164                           	global	_GIE
   165  005F                     _GIE	set	95
   166                           	global	_RA0
   167  0028                     _RA0	set	40
   168                           	global	_RA1
   169  0029                     _RA1	set	41
   170                           	global	_RB4
   171  0034                     _RB4	set	52
   172                           	global	_RB5
   173  0035                     _RB5	set	53
   174                           	global	_T0IE
   175  005D                     _T0IE	set	93
   176                           	global	_T0IF
   177  005A                     _T0IF	set	90
   178                           	global	_TRISB
   179  0086                     _TRISB	set	134
   180                           	global	_TRISD
   181  0088                     _TRISD	set	136
   182                           	global	_PS0
   183  0408                     _PS0	set	1032
   184                           	global	_PS1
   185  0409                     _PS1	set	1033
   186                           	global	_PS2
   187  040A                     _PS2	set	1034
   188                           	global	_PSA
   189  040B                     _PSA	set	1035
   190                           	global	_T0CS
   191  040D                     _T0CS	set	1037
   192                           	global	_ANSEL
   193  0188                     _ANSEL	set	392
   194                           	global	_ANSELH
   195  0189                     _ANSELH	set	393
   196                           	
   197  002F                     STR_1:	
   198  002F  3457               	retlw	87	;'W'
   199  0030  3465               	retlw	101	;'e'
   200  0031  346C               	retlw	108	;'l'
   201  0032  3463               	retlw	99	;'c'
   202  0033  346F               	retlw	111	;'o'
   203  0034  346D               	retlw	109	;'m'
   204  0035  3465               	retlw	101	;'e'
   205  0036  3400               	retlw	0
   206                           psect	strings
   207                           	file	"SpaceMission.as"
   208                           	line	#
   209                           psect cinit,class=CODE,delta=2
   210                           global start_initialization
   211  0277                     start_initialization:
   212                           
   213                           psect	bssCOMMON,class=COMMON,space=1
   214                           global __pbssCOMMON
   215  0070                     __pbssCOMMON:
   216  0070                     _digit0:
   217  0070                            ds      1
   218                           
   219  0071                     _digit1:
   220  0071                            ds      1
   221                           
   222  0072                     _divider:
   223  0072                            ds      1
   224                           
   225  0073                     _indexLines:
   226  0073                            ds      1
   227                           
   228  0074                     _status:
   229  0074                            ds      1
   230                           
   231                           psect	bssBANK0,class=BANK0,space=1
   232                           global __pbssBANK0
   233  0049                     __pbssBANK0:
   234  0049                     _points:
   235  0049                            ds      2
   236                           
   237                           psect	dataBANK0,class=BANK0,space=1
   238                           global __pdataBANK0
   239  0020                     __pdataBANK0:
   240                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
   241                           	line	31
   242  0020                     _line0:
   243  0020                            ds      16
   244                           
   245                           psect	dataBANK0
   246                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
   247                           	line	32
   248  0030                     _line1:
   249  0030                            ds      16
   250                           
   251                           ; Clear objects allocated to COMMON
   252                           psect cinit,class=CODE,delta=2
   253  0277  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
   254  0278  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
   255  0279  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
   256  027A  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
   257  027B  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
   258                           ; Clear objects allocated to BANK0
   259                           psect cinit,class=CODE,delta=2
   260  027C  01C9               	clrf	((__pbssBANK0)+0)&07Fh
   261  027D  01CA               	clrf	((__pbssBANK0)+1)&07Fh
   262                           global btemp
   263                           psect inittext,class=CODE,delta=2
   264                           global init_fetch,btemp
   265                           ;	Called with low address in FSR and high address in W
   266  02A5                     init_fetch:
   267  02A5  087E               	movf btemp,w
   268  02A6  008A               	movwf pclath
   269  02A7  087F               	movf btemp+1,w
   270  02A8  0082               	movwf pc
   271                           global init_ram
   272                           ;Called with:
   273                           ;	high address of idata address in btemp 
   274                           ;	low address of idata address in btemp+1 
   275                           ;	low address of data in FSR
   276                           ;	high address + 1 of data in btemp-1
   277  02A9                     init_ram:
   278  02A9  22A5  120A  118A   	fcall init_fetch
   279  02AC  0080               	movwf indf,f
   280  02AD  0A84               	incf fsr,f
   281  02AE  0804               	movf fsr,w
   282  02AF  067D               	xorwf btemp-1,w
   283  02B0  1903               	btfsc status,2
   284  02B1  3400               	retlw 0
   285  02B2  0AFF               	incf btemp+1,f
   286  02B3  1903               	btfsc status,2
   287  02B4  0AFE               	incf btemp,f
   288  02B5  2AA9               	goto init_ram
   289                           ; Initialize objects allocated to BANK0
   290                           psect cinit,class=CODE,delta=2
   291                           global init_ram, __pidataBANK0
   292  027E  1383               	bcf	status, 7	;select IRP bank0
   293  027F  3040               	movlw low(__pdataBANK0+32)
   294  0280  00FD               	movwf btemp-1,f
   295  0281  3002               	movlw high(__pidataBANK0)
   296  0282  00FE               	movwf btemp,f
   297  0283  303B               	movlw low(__pidataBANK0)
   298  0284  00FF               	movwf btemp+1,f
   299  0285  3020               	movlw low(__pdataBANK0)
   300  0286  0084               	movwf fsr,f
   301  0287  120A  118A  22A9   	fcall init_ram
              120A  118A         
   302                           psect cinit,class=CODE,delta=2
   303                           global end_of_initialization
   304                           
   305                           ;End of C runtime variable initialization code
   306                           
   307  028C                     end_of_initialization:
   308  028C  0183               clrf status
   309  028D  120A  118A  28ED   ljmp _main	;jump to C main() function
   310                           psect	cstackCOMMON,class=COMMON,space=1
   311                           global __pcstackCOMMON
   312  0075                     __pcstackCOMMON:
   313                           	global	?_lcd_clear
   314  0075                     ?_lcd_clear:	; 0 bytes @ 0x0
   315                           	global	?_lcd_init
   316  0075                     ?_lcd_init:	; 0 bytes @ 0x0
   317                           	global	?_isr
   318  0075                     ?_isr:	; 0 bytes @ 0x0
   319                           	global	??_isr
   320  0075                     ??_isr:	; 0 bytes @ 0x0
   321                           	global	?_updateAsteroidsSpeed
   322  0075                     ?_updateAsteroidsSpeed:	; 0 bytes @ 0x0
   323                           	global	?_displayCountDown
   324  0075                     ?_displayCountDown:	; 0 bytes @ 0x0
   325                           	global	?_displayPoints
   326  0075                     ?_displayPoints:	; 0 bytes @ 0x0
   327                           	global	?_displaySpace
   328  0075                     ?_displaySpace:	; 0 bytes @ 0x0
   329                           	global	?_checkCollision
   330  0075                     ?_checkCollision:	; 0 bytes @ 0x0
   331                           	global	?_updateSpace
   332  0075                     ?_updateSpace:	; 0 bytes @ 0x0
   333                           	global	?_initCountDown
   334  0075                     ?_initCountDown:	; 0 bytes @ 0x0
   335                           	global	?_endMission
   336  0075                     ?_endMission:	; 0 bytes @ 0x0
   337                           	global	?_lcd_write
   338  0075                     ?_lcd_write:	; 0 bytes @ 0x0
   339                           	global	?_generateAsteroid
   340  0075                     ?_generateAsteroid:	; 1 bytes @ 0x0
   341                           	global	?_main
   342  0075                     ?_main:	; 2 bytes @ 0x0
   343  0075                     	ds	5
   344                           psect	cstackBANK0,class=BANK0,space=1
   345                           global __pcstackBANK0
   346  0040                     __pcstackBANK0:
   347                           	global	??_updateAsteroidsSpeed
   348  0040                     ??_updateAsteroidsSpeed:	; 0 bytes @ 0x0
   349                           	global	??_displayCountDown
   350  0040                     ??_displayCountDown:	; 0 bytes @ 0x0
   351                           	global	??_displayPoints
   352  0040                     ??_displayPoints:	; 0 bytes @ 0x0
   353                           	global	??_generateAsteroid
   354  0040                     ??_generateAsteroid:	; 0 bytes @ 0x0
   355                           	global	??_checkCollision
   356  0040                     ??_checkCollision:	; 0 bytes @ 0x0
   357                           	global	??_updateSpace
   358  0040                     ??_updateSpace:	; 0 bytes @ 0x0
   359                           	global	??_initCountDown
   360  0040                     ??_initCountDown:	; 0 bytes @ 0x0
   361                           	global	??_endMission
   362  0040                     ??_endMission:	; 0 bytes @ 0x0
   363                           	global	??_lcd_write
   364  0040                     ??_lcd_write:	; 0 bytes @ 0x0
   365  0040                     	ds	1
   366                           	global	updateSpace@prevIndex
   367  0041                     updateSpace@prevIndex:	; 1 bytes @ 0x1
   368  0041                     	ds	1
   369                           	global	lcd_write@c
   370  0042                     lcd_write@c:	; 1 bytes @ 0x2
   371  0042                     	ds	1
   372                           	global	??_lcd_clear
   373  0043                     ??_lcd_clear:	; 0 bytes @ 0x3
   374                           	global	?_lcd_puts
   375  0043                     ?_lcd_puts:	; 0 bytes @ 0x3
   376                           	global	lcd_puts@s
   377  0043                     lcd_puts@s:	; 2 bytes @ 0x3
   378  0043                     	ds	2
   379                           	global	??_lcd_puts
   380  0045                     ??_lcd_puts:	; 0 bytes @ 0x5
   381                           	global	??_lcd_init
   382  0045                     ??_lcd_init:	; 0 bytes @ 0x5
   383                           	global	??_displaySpace
   384  0045                     ??_displaySpace:	; 0 bytes @ 0x5
   385  0045                     	ds	2
   386                           	global	lcd_init@init_value
   387  0047                     lcd_init@init_value:	; 1 bytes @ 0x7
   388  0047                     	ds	1
   389                           	global	??_main
   390  0048                     ??_main:	; 0 bytes @ 0x8
   391  0048                     	ds	1
   392 ;;Data sizes: Strings 8, constant 10, data 32, bss 7, persistent 0 stack 0
   393 ;;Auto spaces:   Size  Autos    Used
   394 ;; COMMON          14      5      10
   395 ;; BANK0           80      9      43
   396 ;; BANK1           80      0       0
   397 ;; BANK3           96      0       0
   398 ;; BANK2           96      0       0
   399                           
   400 ;;
   401 ;; Pointer list with targets:
   402                           
   403 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 16
   404 ;;		 -> STR_1(CODE[8]), line1(BANK0[16]), line0(BANK0[16]), 
   405 ;;
   406                           
   407                           
   408 ;;
   409 ;; Critical Paths under _main in COMMON
   410 ;;
   411 ;;   None.
   412 ;;
   413 ;; Critical Paths under _isr in COMMON
   414 ;;
   415 ;;   None.
   416 ;;
   417 ;; Critical Paths under _main in BANK0
   418 ;;
   419 ;;   _main->_lcd_init
   420 ;;   _lcd_init->_lcd_clear
   421 ;;   _displaySpace->_lcd_clear
   422 ;;   _displaySpace->_lcd_puts
   423 ;;   _lcd_puts->_lcd_write
   424 ;;   _lcd_clear->_lcd_write
   425 ;;
   426 ;; Critical Paths under _isr in BANK0
   427 ;;
   428 ;;   None.
   429 ;;
   430 ;; Critical Paths under _main in BANK1
   431 ;;
   432 ;;   None.
   433 ;;
   434 ;; Critical Paths under _isr in BANK1
   435 ;;
   436 ;;   None.
   437 ;;
   438 ;; Critical Paths under _main in BANK3
   439 ;;
   440 ;;   None.
   441 ;;
   442 ;; Critical Paths under _isr in BANK3
   443 ;;
   444 ;;   None.
   445 ;;
   446 ;; Critical Paths under _main in BANK2
   447 ;;
   448 ;;   None.
   449 ;;
   450 ;; Critical Paths under _isr in BANK2
   451 ;;
   452 ;;   None.
   453                           
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   456 ;;
   457                           
   458 ;;
   459 ;;Call Graph Tables:
   460 ;;
   461 ;; ---------------------------------------------------------------------------------
   462 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   463 ;; ---------------------------------------------------------------------------------
   464 ;; (0) _main                                                 1     1      0     499
   465 ;;                                              8 BANK0      1     1      0
   466 ;;                           _lcd_init
   467 ;;                          _lcd_clear
   468 ;;                           _lcd_puts
   469 ;;                      _initCountDown
   470 ;;                        _updateSpace
   471 ;;                         _endMission
   472 ;;                   _displayCountDown
   473 ;;                      _displayPoints
   474 ;;                       _displaySpace
   475 ;;               _updateAsteroidsSpeed
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (1) _lcd_init                                             3     3      0     122
   478 ;;                                              5 BANK0      3     3      0
   479 ;;                          _lcd_write
   480 ;;                          _lcd_clear
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (1) _displaySpace                                         1     1      0     153
   483 ;;                          _lcd_clear
   484 ;;                           _lcd_puts
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (2) _lcd_puts                                             2     0      2     109
   487 ;;                                              3 BANK0      2     0      2
   488 ;;                          _lcd_write
   489 ;; ---------------------------------------------------------------------------------
   490 ;; (2) _lcd_clear                                            2     2      0      44
   491 ;;                                              3 BANK0      2     2      0
   492 ;;                          _lcd_write
   493 ;; ---------------------------------------------------------------------------------
   494 ;; (3) _lcd_write                                            3     3      0      44
   495 ;;                                              0 BANK0      3     3      0
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (1) _updateSpace                                          2     2      0      71
   498 ;;                                              0 BANK0      2     2      0
   499 ;;                   _generateAsteroid
   500 ;;                     _checkCollision
   501 ;; ---------------------------------------------------------------------------------
   502 ;; (1) _endMission                                           0     0      0       0
   503 ;; ---------------------------------------------------------------------------------
   504 ;; (1) _initCountDown                                        0     0      0       0
   505 ;; ---------------------------------------------------------------------------------
   506 ;; (2) _checkCollision                                       0     0      0       0
   507 ;; ---------------------------------------------------------------------------------
   508 ;; (2) _generateAsteroid                                     0     0      0       0
   509 ;; ---------------------------------------------------------------------------------
   510 ;; (1) _displayPoints                                        0     0      0       0
   511 ;; ---------------------------------------------------------------------------------
   512 ;; (1) _displayCountDown                                     0     0      0       0
   513 ;; ---------------------------------------------------------------------------------
   514 ;; (1) _updateAsteroidsSpeed                                 0     0      0       0
   515 ;; ---------------------------------------------------------------------------------
   516 ;; Estimated maximum stack depth 3
   517 ;; ---------------------------------------------------------------------------------
   518 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   519 ;; ---------------------------------------------------------------------------------
   520 ;; (4) _isr                                                  5     5      0       0
   521 ;;                                              0 COMMON     5     5      0
   522 ;; ---------------------------------------------------------------------------------
   523 ;; Estimated maximum stack depth 4
   524 ;; ---------------------------------------------------------------------------------
   525                           
   526 ;; Call Graph Graphs:
   527                           
   528 ;; _main (ROOT)
   529 ;;   _lcd_init
   530 ;;     _lcd_write
   531 ;;     _lcd_clear
   532 ;;       _lcd_write
   533 ;;   _lcd_clear
   534 ;;     _lcd_write
   535 ;;   _lcd_puts
   536 ;;     _lcd_write
   537 ;;   _initCountDown
   538 ;;   _updateSpace
   539 ;;     _generateAsteroid
   540 ;;     _checkCollision
   541 ;;   _endMission
   542 ;;   _displayCountDown
   543 ;;   _displayPoints
   544 ;;   _displaySpace
   545 ;;     _lcd_clear
   546 ;;       _lcd_write
   547 ;;     _lcd_puts
   548 ;;       _lcd_write
   549 ;;   _updateAsteroidsSpeed
   550 ;;
   551 ;; _isr (ROOT)
   552 ;;
   553                           
   554 ;; Address spaces:
   555                           
   556 ;;Name               Size   Autos  Total    Cost      Usage
   557 ;;BANK3               60      0       0       9        0.0%
   558 ;;BITBANK3            60      0       0       8        0.0%
   559 ;;SFR3                 0      0       0       4        0.0%
   560 ;;BITSFR3              0      0       0       4        0.0%
   561 ;;BANK2               60      0       0      11        0.0%
   562 ;;BITBANK2            60      0       0      10        0.0%
   563 ;;SFR2                 0      0       0       5        0.0%
   564 ;;BITSFR2              0      0       0       5        0.0%
   565 ;;SFR1                 0      0       0       2        0.0%
   566 ;;BITSFR1              0      0       0       2        0.0%
   567 ;;BANK1               50      0       0       7        0.0%
   568 ;;BITBANK1            50      0       0       6        0.0%
   569 ;;CODE                 0      0       0       0        0.0%
   570 ;;DATA                 0      0      38      12        0.0%
   571 ;;ABS                  0      0      35       3        0.0%
   572 ;;NULL                 0      0       0       0        0.0%
   573 ;;STACK                0      0       3       2        0.0%
   574 ;;BANK0               50      9      2B       5       53.8%
   575 ;;BITBANK0            50      0       0       4        0.0%
   576 ;;SFR0                 0      0       0       1        0.0%
   577 ;;BITSFR0              0      0       0       1        0.0%
   578 ;;COMMON               E      5       A       1       71.4%
   579 ;;BITCOMMON            E      0       0       0        0.0%
   580 ;;EEDATA             100      0       0       0        0.0%
   581                           
   582                           	global	_main
   583                           psect	maintext,global,class=CODE,delta=2
   584                           global __pmaintext
   585  00ED                     __pmaintext:
   586                           
   587 ;; *************** function _main *****************
   588 ;; Defined at:
   589 ;;		line 221 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  2  922[COMMON] int 
   596 ;; Registers used:
   597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 17F/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          0       1       0       0       0
   606 ;;      Totals:         0       1       0       0       0
   607 ;;Total ram usage:        1 bytes
   608 ;; Hardware stack levels required when called:    4
   609 ;; This function calls:
   610 ;;		_lcd_init
   611 ;;		_lcd_clear
   612 ;;		_lcd_puts
   613 ;;		_initCountDown
   614 ;;		_updateSpace
   615 ;;		_endMission
   616 ;;		_displayCountDown
   617 ;;		_displayPoints
   618 ;;		_displaySpace
   619 ;;		_updateAsteroidsSpeed
   620 ;; This function is called by:
   621 ;;		Startup code after reset
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           psect	maintext
   625                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
   626                           	line	221
   627                           	global	__size_of_main
   628  0062                     	__size_of_main	equ	__end_of_main-_main
   629                           	
   630  00ED                     _main:	
   631                           	opt	stack 4
   632                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   633                           	line	223
   634                           	
   635  00ED                     l3439:	
   636                           ;spaceMission.c: 223: INTCON = 0;
   637  00ED  018B               	clrf	(11)	;volatile
   638                           	line	224
   639                           	
   640  00EE                     l3441:	
   641                           ;spaceMission.c: 224: TRISB = 0b11000000;
   642  00EE  30C0               	movlw	(0C0h)
   643  00EF  1683               	bsf	status, 5	;RP0=1, select bank1
   644  00F0  1303               	bcf	status, 6	;RP1=0, select bank1
   645  00F1  0086               	movwf	(134)^080h	;volatile
   646                           	line	225
   647                           	
   648  00F2                     l3443:	
   649                           ;spaceMission.c: 225: ANSEL = 0b00000100;
   650  00F2  3004               	movlw	(04h)
   651  00F3  1683               	bsf	status, 5	;RP0=1, select bank3
   652  00F4  1703               	bsf	status, 6	;RP1=1, select bank3
   653  00F5  0088               	movwf	(392)^0180h	;volatile
   654                           	line	226
   655                           ;spaceMission.c: 226: ANSELH = 0x00;
   656  00F6  0189               	clrf	(393)^0180h	;volatile
   657                           	line	229
   658                           ;spaceMission.c: 229: TRISD=0b00000000;
   659  00F7  1683               	bsf	status, 5	;RP0=1, select bank1
   660  00F8  1303               	bcf	status, 6	;RP1=0, select bank1
   661  00F9  0188               	clrf	(136)^080h	;volatile
   662                           	line	231
   663                           	
   664  00FA                     l3445:	
   665                           ;spaceMission.c: 231: lcd_init();
   666  00FA  120A  118A  214F   	fcall	_lcd_init
              120A  118A         
   667                           	line	232
   668                           	
   669  00FF                     l3447:	
   670                           ;spaceMission.c: 232: lcd_clear();
   671  00FF  120A  118A  2290   	fcall	_lcd_clear
              120A  118A         
   672                           	line	233
   673                           	
   674  0104                     l3449:	
   675                           ;spaceMission.c: 233: lcd_puts("Welcome");
   676  0104  300B               	movlw	low((STR_1-__stringbase))
   677  0105  1283               	bcf	status, 5	;RP0=0, select bank0
   678  0106  1303               	bcf	status, 6	;RP1=0, select bank0
   679  0107  00C3               	movwf	(?_lcd_puts)
   680  0108  3080               	movlw	80h
   681  0109  00C4               	movwf	(?_lcd_puts+1)
   682  010A  120A  118A  2210   	fcall	_lcd_puts
              120A  118A         
   683                           	line	234
   684                           	
   685  010F                     l3451:	
   686                           ;spaceMission.c: 234: initCountDown();
   687  010F  120A  118A  22B6   	fcall	_initCountDown
              120A  118A         
   688                           	line	236
   689                           	
   690  0114                     l3453:	
   691                           ;spaceMission.c: 236: GIE=1;
   692  0114  178B               	bsf	(95/8),(95)&7
   693  0115  2916               	goto	l3455
   694                           	line	239
   695                           ;spaceMission.c: 239: while(1){
   696                           	
   697  0116                     l923:	
   698                           	line	242
   699                           	
   700  0116                     l3455:	
   701                           ;spaceMission.c: 242: if (status & 0x8){
   702  0116  1DF4               	btfss	(_status),(3)&7
   703  0117  2919               	goto	u2551
   704  0118  291A               	goto	u2550
   705  0119                     u2551:
   706  0119  2926               	goto	l3461
   707  011A                     u2550:
   708                           	line	243
   709                           	
   710  011A                     l3457:	
   711                           ;spaceMission.c: 243: updateSpace();
   712  011A  120A  118A  2037   	fcall	_updateSpace
              120A  118A         
   713                           	line	244
   714                           	
   715  011F                     l3459:	
   716                           ;spaceMission.c: 244: status &= ~0x8;
   717  011F  30F7               	movlw	(0F7h)
   718  0120  1283               	bcf	status, 5	;RP0=0, select bank0
   719  0121  1303               	bcf	status, 6	;RP1=0, select bank0
   720  0122  00C8               	movwf	(??_main+0)+0
   721  0123  0848               	movf	(??_main+0)+0,w
   722  0124  05F4               	andwf	(_status),f
   723  0125  2926               	goto	l3461
   724                           	line	245
   725                           	
   726  0126                     l924:	
   727                           	line	247
   728                           	
   729  0126                     l3461:	
   730                           ;spaceMission.c: 245: }
   731                           ;spaceMission.c: 247: if(status & 0x1 || status & 0x2 ){
   732  0126  1874               	btfsc	(_status),(0)&7
   733  0127  2929               	goto	u2561
   734  0128  292A               	goto	u2560
   735  0129                     u2561:
   736  0129  292F               	goto	l3465
   737  012A                     u2560:
   738                           	
   739  012A                     l3463:	
   740  012A  1CF4               	btfss	(_status),(1)&7
   741  012B  292D               	goto	u2571
   742  012C  292E               	goto	u2570
   743  012D                     u2571:
   744  012D  2935               	goto	l3467
   745  012E                     u2570:
   746  012E  292F               	goto	l3465
   747                           	
   748  012F                     l927:	
   749                           	line	248
   750                           	
   751  012F                     l3465:	
   752                           ;spaceMission.c: 248: endMission();
   753  012F  120A  118A  22CD   	fcall	_endMission
              120A  118A         
   754                           	line	249
   755                           ;spaceMission.c: 249: }else{
   756  0134  2916               	goto	l3455
   757                           	
   758  0135                     l925:	
   759                           	line	250
   760                           	
   761  0135                     l3467:	
   762                           ;spaceMission.c: 250: displayCountDown();
   763  0135  120A  118A  22CF   	fcall	_displayCountDown
              120A  118A         
   764                           	line	251
   765                           ;spaceMission.c: 251: displayPoints();
   766  013A  120A  118A  22CE   	fcall	_displayPoints
              120A  118A         
   767                           	line	252
   768                           	
   769  013F                     l3469:	
   770                           ;spaceMission.c: 252: displaySpace();
   771  013F  120A  118A  225B   	fcall	_displaySpace
              120A  118A         
   772                           	line	253
   773                           	
   774  0144                     l3471:	
   775                           ;spaceMission.c: 253: updateAsteroidsSpeed();
   776  0144  120A  118A  22D0   	fcall	_updateAsteroidsSpeed
              120A  118A         
   777  0149  2916               	goto	l3455
   778                           	line	254
   779                           	
   780  014A                     l928:	
   781  014A  2916               	goto	l3455
   782                           	line	255
   783                           	
   784  014B                     l929:	
   785                           	line	239
   786  014B  2916               	goto	l3455
   787                           	
   788  014C                     l930:	
   789                           	line	256
   790                           	
   791  014C                     l931:	
   792                           	global	start
   793  014C  120A  118A  2812   	ljmp	start
   794                           	opt stack 0
   795                           GLOBAL	__end_of_main
   796  014F                     	__end_of_main:
   797 ;; =============== function _main ends ============
   798                           
   799                           	signat	_main,90
   800                           	global	_lcd_init
   801                           psect	text435,local,class=CODE,delta=2
   802                           global __ptext435
   803  014F                     __ptext435:
   804                           
   805 ;; *************** function _lcd_init *****************
   806 ;; Defined at:
   807 ;;		line 93 in file "C:\Users\Michele\Documents\GitHub\spaceMission\lcd.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  init_value      1    7[BANK0 ] unsigned char 
   812 ;; Return value:  Size  Location     Type
   813 ;;		None               void
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         0       1       0       0       0
   823 ;;      Temps:          0       2       0       0       0
   824 ;;      Totals:         0       3       0       0       0
   825 ;;Total ram usage:        3 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    3
   828 ;; This function calls:
   829 ;;		_lcd_write
   830 ;;		_lcd_clear
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           psect	text435
   836                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\lcd.c"
   837                           	line	93
   838                           	global	__size_of_lcd_init
   839  0057                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
   840                           	
   841  014F                     _lcd_init:	
   842                           	opt	stack 4
   843                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   844                           	line	96
   845                           	
   846  014F                     l3399:	
   847                           ;lcd.c: 94: char init_value;
   848                           ;lcd.c: 96: init_value = 0x03;
   849  014F  3003               	movlw	(03h)
   850  0150  1283               	bcf	status, 5	;RP0=0, select bank0
   851  0151  1303               	bcf	status, 6	;RP1=0, select bank0
   852  0152  00C5               	movwf	(??_lcd_init+0)+0
   853  0153  0845               	movf	(??_lcd_init+0)+0,w
   854  0154  00C7               	movwf	(lcd_init@init_value)
   855                           	line	97
   856                           	
   857  0155                     l3401:	
   858                           ;lcd.c: 97: RB4 = 0;
   859  0155  1206               	bcf	(52/8),(52)&7
   860                           	line	98
   861                           	
   862  0156                     l3403:	
   863                           ;lcd.c: 98: RB5 = 0;
   864  0156  1286               	bcf	(53/8),(53)&7
   865                           	line	100
   866                           ;lcd.c: 100: _delay((unsigned long)((15)*(8000000/4000.0)));
   867                           	opt asmopt_off
   868  0157  3027               movlw	39
   869  0158  00C6               movwf	((??_lcd_init+0)+0+1),f
   870  0159  30F5               	movlw	245
   871  015A  00C5               movwf	((??_lcd_init+0)+0),f
   872  015B                     u2587:
   873  015B  0BC5               	decfsz	((??_lcd_init+0)+0),f
   874  015C  295B               	goto	u2587
   875  015D  0BC6               	decfsz	((??_lcd_init+0)+0+1),f
   876  015E  295B               	goto	u2587
   877                           opt asmopt_on
   878                           
   879                           	line	101
   880                           	
   881  015F                     l3405:	
   882                           ;lcd.c: 101: PORTB = (PORTB & 0xF0) | init_value;
   883  015F  1283               	bcf	status, 5	;RP0=0, select bank0
   884  0160  1303               	bcf	status, 6	;RP1=0, select bank0
   885  0161  0806               	movf	(6),w
   886  0162  39F0               	andlw	0F0h
   887  0163  0447               	iorwf	(lcd_init@init_value),w
   888  0164  0086               	movwf	(6)	;volatile
   889                           	line	102
   890                           	
   891  0165                     l3407:	
   892                           ;lcd.c: 102: ((RB5 = 1),(RB5=0));
   893  0165  1686               	bsf	(53/8),(53)&7
   894                           	
   895  0166                     l3409:	
   896  0166  1286               	bcf	(53/8),(53)&7
   897                           	line	103
   898                           	
   899  0167                     l3411:	
   900                           ;lcd.c: 103: _delay((unsigned long)((5)*(8000000/4000.0)));
   901                           	opt asmopt_off
   902  0167  300D               movlw	13
   903  0168  00C6               movwf	((??_lcd_init+0)+0+1),f
   904  0169  30FB               	movlw	251
   905  016A  00C5               movwf	((??_lcd_init+0)+0),f
   906  016B                     u2597:
   907  016B  0BC5               	decfsz	((??_lcd_init+0)+0),f
   908  016C  296B               	goto	u2597
   909  016D  0BC6               	decfsz	((??_lcd_init+0)+0+1),f
   910  016E  296B               	goto	u2597
   911  016F  2970               	nop2
   912                           opt asmopt_on
   913                           
   914                           	line	104
   915                           	
   916  0170                     l3413:	
   917                           ;lcd.c: 104: ((RB5 = 1),(RB5=0));
   918  0170  1283               	bcf	status, 5	;RP0=0, select bank0
   919  0171  1303               	bcf	status, 6	;RP1=0, select bank0
   920  0172  1686               	bsf	(53/8),(53)&7
   921                           	
   922  0173                     l3415:	
   923  0173  1286               	bcf	(53/8),(53)&7
   924                           	line	105
   925                           	
   926  0174                     l3417:	
   927                           ;lcd.c: 105: PORTB = 0x02;
   928  0174  3002               	movlw	(02h)
   929  0175  0086               	movwf	(6)	;volatile
   930                           	line	106
   931                           	
   932  0176                     l3419:	
   933                           ;lcd.c: 106: ((RB5 = 1),(RB5=0));
   934  0176  1686               	bsf	(53/8),(53)&7
   935                           	
   936  0177                     l3421:	
   937  0177  1286               	bcf	(53/8),(53)&7
   938                           	line	107
   939                           	
   940  0178                     l3423:	
   941                           ;lcd.c: 107: _delay((unsigned long)((5)*(8000000/4000.0)));
   942                           	opt asmopt_off
   943  0178  300D               movlw	13
   944  0179  00C6               movwf	((??_lcd_init+0)+0+1),f
   945  017A  30FB               	movlw	251
   946  017B  00C5               movwf	((??_lcd_init+0)+0),f
   947  017C                     u2607:
   948  017C  0BC5               	decfsz	((??_lcd_init+0)+0),f
   949  017D  297C               	goto	u2607
   950  017E  0BC6               	decfsz	((??_lcd_init+0)+0+1),f
   951  017F  297C               	goto	u2607
   952  0180  2981               	nop2
   953                           opt asmopt_on
   954                           
   955                           	line	108
   956                           	
   957  0181                     l3425:	
   958                           ;lcd.c: 108: ((RB5 = 1),(RB5=0));
   959  0181  1283               	bcf	status, 5	;RP0=0, select bank0
   960  0182  1303               	bcf	status, 6	;RP1=0, select bank0
   961  0183  1686               	bsf	(53/8),(53)&7
   962                           	
   963  0184                     l3427:	
   964  0184  1286               	bcf	(53/8),(53)&7
   965                           	line	109
   966                           	
   967  0185                     l3429:	
   968                           ;lcd.c: 109: _delay((unsigned long)((5)*(8000000/4000.0)));
   969                           	opt asmopt_off
   970  0185  300D               movlw	13
   971  0186  00C6               movwf	((??_lcd_init+0)+0+1),f
   972  0187  30FB               	movlw	251
   973  0188  00C5               movwf	((??_lcd_init+0)+0),f
   974  0189                     u2617:
   975  0189  0BC5               	decfsz	((??_lcd_init+0)+0),f
   976  018A  2989               	goto	u2617
   977  018B  0BC6               	decfsz	((??_lcd_init+0)+0+1),f
   978  018C  2989               	goto	u2617
   979  018D  298E               	nop2
   980                           opt asmopt_on
   981                           
   982                           	line	111
   983                           	
   984  018E                     l3431:	
   985                           ;lcd.c: 111: lcd_write(0x28);
   986  018E  3028               	movlw	(028h)
   987  018F  120A  118A  21E2   	fcall	_lcd_write
              120A  118A         
   988                           	line	112
   989                           	
   990  0194                     l3433:	
   991                           ;lcd.c: 112: lcd_write(0x0C);
   992  0194  300C               	movlw	(0Ch)
   993  0195  120A  118A  21E2   	fcall	_lcd_write
              120A  118A         
   994                           	line	113
   995                           	
   996  019A                     l3435:	
   997                           ;lcd.c: 113: lcd_clear();
   998  019A  120A  118A  2290   	fcall	_lcd_clear
              120A  118A         
   999                           	line	114
  1000                           	
  1001  019F                     l3437:	
  1002                           ;lcd.c: 114: lcd_write(0x6);
  1003  019F  3006               	movlw	(06h)
  1004  01A0  120A  118A  21E2   	fcall	_lcd_write
              120A  118A         
  1005                           	line	115
  1006                           	
  1007  01A5                     l1786:	
  1008  01A5  0008               	return
  1009                           	opt stack 0
  1010                           GLOBAL	__end_of_lcd_init
  1011  01A6                     	__end_of_lcd_init:
  1012 ;; =============== function _lcd_init ends ============
  1013                           
  1014                           	signat	_lcd_init,88
  1015                           	global	_displaySpace
  1016                           psect	text436,local,class=CODE,delta=2
  1017                           global __ptext436
  1018  025B                     __ptext436:
  1019                           
  1020 ;; *************** function _displaySpace *****************
  1021 ;; Defined at:
  1022 ;;		line 93 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  index           1    0        unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;		None               void
  1029 ;; Registers used:
  1030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0
  1039 ;;      Totals:         0       0       0       0       0
  1040 ;;Total ram usage:        0 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    3
  1043 ;; This function calls:
  1044 ;;		_lcd_clear
  1045 ;;		_lcd_puts
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           psect	text436
  1051                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1052                           	line	93
  1053                           	global	__size_of_displaySpace
  1054  001C                     	__size_of_displaySpace	equ	__end_of_displaySpace-_displaySpace
  1055                           	
  1056  025B                     _displaySpace:	
  1057                           	opt	stack 4
  1058                           ; Regs used in _displaySpace: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1059                           	line	96
  1060                           	
  1061  025B                     l3393:	
  1062                           ;spaceMission.c: 94: unsigned char index;
  1063                           ;spaceMission.c: 96: lcd_clear();
  1064  025B  120A  118A  2290   	fcall	_lcd_clear
              120A  118A         
  1065                           	line	97
  1066                           	
  1067  0260                     l3395:	
  1068                           ;spaceMission.c: 97: lcd_puts(line0);
  1069  0260  3020               	movlw	(_line0&0ffh)
  1070  0261  1283               	bcf	status, 5	;RP0=0, select bank0
  1071  0262  1303               	bcf	status, 6	;RP1=0, select bank0
  1072  0263  00C3               	movwf	(?_lcd_puts)
  1073  0264  3000               	movlw	(0x0/2)
  1074  0265  00C4               	movwf	(?_lcd_puts+1)
  1075  0266  120A  118A  2210   	fcall	_lcd_puts
              120A  118A         
  1076                           	line	98
  1077                           	
  1078  026B                     l3397:	
  1079                           ;spaceMission.c: 98: lcd_puts(line1);
  1080  026B  3030               	movlw	(_line1&0ffh)
  1081  026C  1283               	bcf	status, 5	;RP0=0, select bank0
  1082  026D  1303               	bcf	status, 6	;RP1=0, select bank0
  1083  026E  00C3               	movwf	(?_lcd_puts)
  1084  026F  3000               	movlw	(0x0/2)
  1085  0270  00C4               	movwf	(?_lcd_puts+1)
  1086  0271  120A  118A  2210   	fcall	_lcd_puts
              120A  118A         
  1087                           	line	106
  1088                           	
  1089  0276                     l883:	
  1090  0276  0008               	return
  1091                           	opt stack 0
  1092                           GLOBAL	__end_of_displaySpace
  1093  0277                     	__end_of_displaySpace:
  1094 ;; =============== function _displaySpace ends ============
  1095                           
  1096                           	signat	_displaySpace,88
  1097                           	global	_lcd_puts
  1098                           psect	text437,local,class=CODE,delta=2
  1099                           global __ptext437
  1100  0210                     __ptext437:
  1101                           
  1102 ;; *************** function _lcd_puts *****************
  1103 ;; Defined at:
  1104 ;;		line 63 in file "C:\Users\Michele\Documents\GitHub\spaceMission\lcd.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  s               2    3[BANK0 ] PTR const unsigned char 
  1107 ;;		 -> STR_1(8), line1(16), line0(16), 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;		None               void
  1112 ;; Registers used:
  1113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       2       0       0       0
  1120 ;;      Locals:         0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0
  1122 ;;      Totals:         0       2       0       0       0
  1123 ;;Total ram usage:        2 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    2
  1126 ;; This function calls:
  1127 ;;		_lcd_write
  1128 ;; This function is called by:
  1129 ;;		_displaySpace
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           psect	text437
  1134                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\lcd.c"
  1135                           	line	63
  1136                           	global	__size_of_lcd_puts
  1137  002B                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  1138                           	
  1139  0210                     _lcd_puts:	
  1140                           	opt	stack 4
  1141                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1142                           	line	64
  1143                           	
  1144  0210                     l3385:	
  1145                           ;lcd.c: 64: RB4 = 1;
  1146  0210  1283               	bcf	status, 5	;RP0=0, select bank0
  1147  0211  1303               	bcf	status, 6	;RP1=0, select bank0
  1148  0212  1606               	bsf	(52/8),(52)&7
  1149                           	line	65
  1150                           ;lcd.c: 65: while(*s)
  1151  0213  2A2B               	goto	l3391
  1152                           	
  1153  0214                     l1775:	
  1154                           	line	66
  1155                           	
  1156  0214                     l3387:	
  1157                           ;lcd.c: 66: lcd_write(*s++);
  1158  0214  0844               	movf	(lcd_puts@s+1),w
  1159  0215  00FF               	movwf	btemp+1
  1160  0216  0843               	movf	(lcd_puts@s),w
  1161  0217  0084               	movwf	fsr0
  1162  0218  120A  118A  2015   	fcall	stringtab
              120A  118A         
  1163  021D  120A  118A  21E2   	fcall	_lcd_write
              120A  118A         
  1164                           	
  1165  0222                     l3389:	
  1166  0222  3001               	movlw	low(01h)
  1167  0223  1283               	bcf	status, 5	;RP0=0, select bank0
  1168  0224  1303               	bcf	status, 6	;RP1=0, select bank0
  1169  0225  07C3               	addwf	(lcd_puts@s),f
  1170  0226  1803               	skipnc
  1171  0227  0AC4               	incf	(lcd_puts@s+1),f
  1172  0228  3000               	movlw	high(01h)
  1173  0229  07C4               	addwf	(lcd_puts@s+1),f
  1174  022A  2A2B               	goto	l3391
  1175                           	
  1176  022B                     l1774:	
  1177                           	line	65
  1178                           	
  1179  022B                     l3391:	
  1180  022B  0844               	movf	(lcd_puts@s+1),w
  1181  022C  00FF               	movwf	btemp+1
  1182  022D  0843               	movf	(lcd_puts@s),w
  1183  022E  0084               	movwf	fsr0
  1184  022F  120A  118A  2015   	fcall	stringtab
              120A  118A         
  1185  0234  3800               	iorlw	0
  1186  0235  1D03               	skipz
  1187  0236  2A38               	goto	u2541
  1188  0237  2A39               	goto	u2540
  1189  0238                     u2541:
  1190  0238  2A14               	goto	l3387
  1191  0239                     u2540:
  1192  0239  2A3A               	goto	l1777
  1193                           	
  1194  023A                     l1776:	
  1195                           	line	67
  1196                           	
  1197  023A                     l1777:	
  1198  023A  0008               	return
  1199                           	opt stack 0
  1200                           GLOBAL	__end_of_lcd_puts
  1201  023B                     	__end_of_lcd_puts:
  1202 ;; =============== function _lcd_puts ends ============
  1203                           
  1204                           	signat	_lcd_puts,4216
  1205                           	global	_lcd_clear
  1206                           psect	text438,local,class=CODE,delta=2
  1207                           global __ptext438
  1208  0290                     __ptext438:
  1209                           
  1210 ;; *************** function _lcd_clear *****************
  1211 ;; Defined at:
  1212 ;;		line 53 in file "C:\Users\Michele\Documents\GitHub\spaceMission\lcd.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       2       0       0       0
  1229 ;;      Totals:         0       2       0       0       0
  1230 ;;Total ram usage:        2 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    2
  1233 ;; This function calls:
  1234 ;;		_lcd_write
  1235 ;; This function is called by:
  1236 ;;		_displaySpace
  1237 ;;		_main
  1238 ;;		_lcd_init
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           psect	text438
  1242                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\lcd.c"
  1243                           	line	53
  1244                           	global	__size_of_lcd_clear
  1245  0015                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1246                           	
  1247  0290                     _lcd_clear:	
  1248                           	opt	stack 4
  1249                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1250                           	line	54
  1251                           	
  1252  0290                     l3379:	
  1253                           ;lcd.c: 54: RB4 = 0;
  1254  0290  1283               	bcf	status, 5	;RP0=0, select bank0
  1255  0291  1303               	bcf	status, 6	;RP1=0, select bank0
  1256  0292  1206               	bcf	(52/8),(52)&7
  1257                           	line	55
  1258                           	
  1259  0293                     l3381:	
  1260                           ;lcd.c: 55: lcd_write(0x1);
  1261  0293  3001               	movlw	(01h)
  1262  0294  120A  118A  21E2   	fcall	_lcd_write
              120A  118A         
  1263                           	line	56
  1264                           	
  1265  0299                     l3383:	
  1266                           ;lcd.c: 56: _delay((unsigned long)((5)*(8000000/4000.0)));
  1267                           	opt asmopt_off
  1268  0299  300D               movlw	13
  1269  029A  1283               	bcf	status, 5	;RP0=0, select bank0
  1270  029B  1303               	bcf	status, 6	;RP1=0, select bank0
  1271  029C  00C4               movwf	((??_lcd_clear+0)+0+1),f
  1272  029D  30FB               	movlw	251
  1273  029E  00C3               movwf	((??_lcd_clear+0)+0),f
  1274  029F                     u2627:
  1275  029F  0BC3               	decfsz	((??_lcd_clear+0)+0),f
  1276  02A0  2A9F               	goto	u2627
  1277  02A1  0BC4               	decfsz	((??_lcd_clear+0)+0+1),f
  1278  02A2  2A9F               	goto	u2627
  1279  02A3  2AA4               	nop2
  1280                           opt asmopt_on
  1281                           
  1282                           	line	57
  1283                           	
  1284  02A4                     l1771:	
  1285  02A4  0008               	return
  1286                           	opt stack 0
  1287                           GLOBAL	__end_of_lcd_clear
  1288  02A5                     	__end_of_lcd_clear:
  1289 ;; =============== function _lcd_clear ends ============
  1290                           
  1291                           	signat	_lcd_clear,88
  1292                           	global	_lcd_write
  1293                           psect	text439,local,class=CODE,delta=2
  1294                           global __ptext439
  1295  01E2                     __ptext439:
  1296                           
  1297 ;; *************** function _lcd_write *****************
  1298 ;; Defined at:
  1299 ;;		line 38 in file "C:\Users\Michele\Documents\GitHub\spaceMission\lcd.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  c               1    wreg     unsigned char 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  c               1    2[BANK0 ] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;		None               void
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         0       0       0       0       0
  1314 ;;      Locals:         0       1       0       0       0
  1315 ;;      Temps:          0       2       0       0       0
  1316 ;;      Totals:         0       3       0       0       0
  1317 ;;Total ram usage:        3 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    1
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_lcd_clear
  1324 ;;		_lcd_puts
  1325 ;;		_lcd_init
  1326 ;;		_lcd_putch
  1327 ;;		_lcd_goto
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           psect	text439
  1331                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\lcd.c"
  1332                           	line	38
  1333                           	global	__size_of_lcd_write
  1334  002E                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  1335                           	
  1336  01E2                     _lcd_write:	
  1337                           	opt	stack 4
  1338                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  1339                           ;lcd_write@c stored from wreg
  1340  01E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1341  01E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1342  01E4  00C2               	movwf	(lcd_write@c)
  1343                           	line	39
  1344                           	
  1345  01E5                     l3365:	
  1346                           ;lcd.c: 39: _delay((unsigned long)((40)*(8000000/4000000.0)));
  1347                           	opt asmopt_off
  1348  01E5  301A               movlw	26
  1349  01E6  00C0               movwf	(??_lcd_write+0)+0,f
  1350  01E7                     u2637:
  1351  01E7  0BC0               decfsz	(??_lcd_write+0)+0,f
  1352  01E8  29E7               	goto	u2637
  1353  01E9  0064               	clrwdt
  1354                           opt asmopt_on
  1355                           
  1356                           	line	40
  1357                           	
  1358  01EA                     l3367:	
  1359                           ;lcd.c: 40: PORTB = (PORTB & 0xF0) | ( ( c >> 4 ) & 0x0F );
  1360  01EA  1283               	bcf	status, 5	;RP0=0, select bank0
  1361  01EB  1303               	bcf	status, 6	;RP1=0, select bank0
  1362  01EC  0842               	movf	(lcd_write@c),w
  1363  01ED  00C0               	movwf	(??_lcd_write+0)+0
  1364  01EE  3004               	movlw	04h
  1365  01EF                     u2535:
  1366  01EF  1003               	clrc
  1367  01F0  0CC0               	rrf	(??_lcd_write+0)+0,f
  1368  01F1  3EFF               	addlw	-1
  1369  01F2  1D03               	skipz
  1370  01F3  29EF               	goto	u2535
  1371  01F4  300F               	movlw	(0Fh)
  1372  01F5  0540               	andwf	0+(??_lcd_write+0)+0,w
  1373  01F6  00C1               	movwf	(??_lcd_write+1)+0
  1374  01F7  0806               	movf	(6),w
  1375  01F8  39F0               	andlw	0F0h
  1376  01F9  0441               	iorwf	0+(??_lcd_write+1)+0,w
  1377  01FA  0086               	movwf	(6)	;volatile
  1378                           	line	41
  1379                           	
  1380  01FB                     l3369:	
  1381                           ;lcd.c: 41: ((RB5 = 1),(RB5=0));
  1382  01FB  1686               	bsf	(53/8),(53)&7
  1383                           	
  1384  01FC                     l3371:	
  1385  01FC  1286               	bcf	(53/8),(53)&7
  1386                           	line	42
  1387                           	
  1388  01FD                     l3373:	
  1389                           ;lcd.c: 42: PORTB = (PORTB & 0xF0) | (c & 0x0F);
  1390  01FD  300F               	movlw	(0Fh)
  1391  01FE  0542               	andwf	(lcd_write@c),w
  1392  01FF  00C0               	movwf	(??_lcd_write+0)+0
  1393  0200  0806               	movf	(6),w
  1394  0201  39F0               	andlw	0F0h
  1395  0202  0440               	iorwf	0+(??_lcd_write+0)+0,w
  1396  0203  0086               	movwf	(6)	;volatile
  1397                           	line	43
  1398                           	
  1399  0204                     l3375:	
  1400                           ;lcd.c: 43: ((RB5 = 1),(RB5=0));
  1401  0204  1686               	bsf	(53/8),(53)&7
  1402                           	
  1403  0205                     l3377:	
  1404  0205  1286               	bcf	(53/8),(53)&7
  1405                           	line	44
  1406                           ;lcd.c: 44: _delay((unsigned long)((5)*(8000000/4000.0)));
  1407                           	opt asmopt_off
  1408  0206  300D               movlw	13
  1409  0207  00C1               movwf	((??_lcd_write+0)+0+1),f
  1410  0208  30FB               	movlw	251
  1411  0209  00C0               movwf	((??_lcd_write+0)+0),f
  1412  020A                     u2647:
  1413  020A  0BC0               	decfsz	((??_lcd_write+0)+0),f
  1414  020B  2A0A               	goto	u2647
  1415  020C  0BC1               	decfsz	((??_lcd_write+0)+0+1),f
  1416  020D  2A0A               	goto	u2647
  1417  020E  2A0F               	nop2
  1418                           opt asmopt_on
  1419                           
  1420                           	line	45
  1421                           	
  1422  020F                     l1768:	
  1423  020F  0008               	return
  1424                           	opt stack 0
  1425                           GLOBAL	__end_of_lcd_write
  1426  0210                     	__end_of_lcd_write:
  1427 ;; =============== function _lcd_write ends ============
  1428                           
  1429                           	signat	_lcd_write,4216
  1430                           	global	_updateSpace
  1431                           psect	text440,local,class=CODE,delta=2
  1432                           global __ptext440
  1433  0037                     __ptext440:
  1434                           
  1435 ;; *************** function _updateSpace *****************
  1436 ;; Defined at:
  1437 ;;		line 126 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  prevIndex       1    1[BANK0 ] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;		None               void
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       1       0       0       0
  1453 ;;      Temps:          0       1       0       0       0
  1454 ;;      Totals:         0       2       0       0       0
  1455 ;;Total ram usage:        2 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    2
  1458 ;; This function calls:
  1459 ;;		_generateAsteroid
  1460 ;;		_checkCollision
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           psect	text440
  1466                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1467                           	line	126
  1468                           	global	__size_of_updateSpace
  1469  00B6                     	__size_of_updateSpace	equ	__end_of_updateSpace-_updateSpace
  1470                           	
  1471  0037                     _updateSpace:	
  1472                           	opt	stack 5
  1473                           ; Regs used in _updateSpace: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1474                           	line	132
  1475                           	
  1476  0037                     l3327:	
  1477                           ;spaceMission.c: 132: if(line0[indexLines] == 'B' || line1[indexLines] == 'B'){
  1478  0037  0873               	movf	(_indexLines),w
  1479  0038  3E20               	addlw	_line0&0ffh
  1480  0039  0084               	movwf	fsr0
  1481  003A  1383               	bcf	status, 7	;select IRP bank0
  1482  003B  0800               	movf	indf,w
  1483  003C  3A42               	xorlw	042h
  1484  003D  1903               	skipnz
  1485  003E  2840               	goto	u2451
  1486  003F  2841               	goto	u2450
  1487  0040                     u2451:
  1488  0040  284B               	goto	l3331
  1489  0041                     u2450:
  1490                           	
  1491  0041                     l3329:	
  1492  0041  0873               	movf	(_indexLines),w
  1493  0042  3E30               	addlw	_line1&0ffh
  1494  0043  0084               	movwf	fsr0
  1495  0044  0800               	movf	indf,w
  1496  0045  3A42               	xorlw	042h
  1497  0046  1D03               	skipz
  1498  0047  2849               	goto	u2461
  1499  0048  284A               	goto	u2460
  1500  0049                     u2461:
  1501  0049  2854               	goto	l3333
  1502  004A                     u2460:
  1503  004A  284B               	goto	l3331
  1504                           	
  1505  004B                     l896:	
  1506                           	line	133
  1507                           	
  1508  004B                     l3331:	
  1509                           ;spaceMission.c: 133: ++points;
  1510  004B  3001               	movlw	low(01h)
  1511  004C  1283               	bcf	status, 5	;RP0=0, select bank0
  1512  004D  1303               	bcf	status, 6	;RP1=0, select bank0
  1513  004E  07C9               	addwf	(_points),f
  1514  004F  1803               	skipnc
  1515  0050  0ACA               	incf	(_points+1),f
  1516  0051  3000               	movlw	high(01h)
  1517  0052  07CA               	addwf	(_points+1),f
  1518  0053  2854               	goto	l3333
  1519                           	line	134
  1520                           	
  1521  0054                     l894:	
  1522                           	line	139
  1523                           	
  1524  0054                     l3333:	
  1525                           ;spaceMission.c: 134: }
  1526                           ;spaceMission.c: 139: unsigned char prevIndex = 0;
  1527  0054  1003               	clrc
  1528  0055  3000               	movlw	0
  1529  0056  1803               	btfsc	status,0
  1530  0057  3001               	movlw	1
  1531  0058  1283               	bcf	status, 5	;RP0=0, select bank0
  1532  0059  1303               	bcf	status, 6	;RP1=0, select bank0
  1533  005A  00C1               	movwf	(updateSpace@prevIndex)
  1534                           	line	141
  1535                           	
  1536  005B                     l3335:	
  1537                           ;spaceMission.c: 141: if (indexLines !=0){
  1538  005B  0873               	movf	(_indexLines),w
  1539  005C  1D03               	skipz
  1540  005D  285F               	goto	u2470
  1541  005E  2865               	goto	l3339
  1542  005F                     u2470:
  1543                           	line	142
  1544                           	
  1545  005F                     l3337:	
  1546                           ;spaceMission.c: 142: prevIndex = indexLines-1;
  1547  005F  0873               	movf	(_indexLines),w
  1548  0060  3EFF               	addlw	0FFh
  1549  0061  00C0               	movwf	(??_updateSpace+0)+0
  1550  0062  0840               	movf	(??_updateSpace+0)+0,w
  1551  0063  00C1               	movwf	(updateSpace@prevIndex)
  1552                           	line	143
  1553                           ;spaceMission.c: 143: } else {
  1554  0064  286A               	goto	l3341
  1555                           	
  1556  0065                     l897:	
  1557                           	line	144
  1558                           	
  1559  0065                     l3339:	
  1560                           ;spaceMission.c: 144: prevIndex = 15;
  1561  0065  300F               	movlw	(0Fh)
  1562  0066  00C0               	movwf	(??_updateSpace+0)+0
  1563  0067  0840               	movf	(??_updateSpace+0)+0,w
  1564  0068  00C1               	movwf	(updateSpace@prevIndex)
  1565  0069  286A               	goto	l3341
  1566                           	line	145
  1567                           	
  1568  006A                     l898:	
  1569                           	line	147
  1570                           	
  1571  006A                     l3341:	
  1572                           ;spaceMission.c: 145: }
  1573                           ;spaceMission.c: 147: if (generateAsteroid()){
  1574  006A  120A  118A  22CA   	fcall	_generateAsteroid
              120A  118A         
  1575  006F  3A00               	xorlw	0
  1576  0070  1903               	skipnz
  1577  0071  2873               	goto	u2481
  1578  0072  2874               	goto	u2480
  1579  0073                     u2481:
  1580  0073  2897               	goto	l3349
  1581  0074                     u2480:
  1582                           	line	148
  1583                           	
  1584  0074                     l3343:	
  1585                           ;spaceMission.c: 148: if(line1[prevIndex] != 'B'){
  1586  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  1587  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  1588  0076  0841               	movf	(updateSpace@prevIndex),w
  1589  0077  3E30               	addlw	_line1&0ffh
  1590  0078  0084               	movwf	fsr0
  1591  0079  1383               	bcf	status, 7	;select IRP bank0
  1592  007A  0800               	movf	indf,w
  1593  007B  3A42               	xorlw	042h
  1594  007C  1903               	skipnz
  1595  007D  287F               	goto	u2491
  1596  007E  2880               	goto	u2490
  1597  007F                     u2491:
  1598  007F  2888               	goto	l3347
  1599  0080                     u2490:
  1600                           	line	149
  1601                           	
  1602  0080                     l3345:	
  1603                           ;spaceMission.c: 149: line0[indexLines] = 'B';
  1604  0080  3042               	movlw	(042h)
  1605  0081  00C0               	movwf	(??_updateSpace+0)+0
  1606  0082  0873               	movf	(_indexLines),w
  1607  0083  3E20               	addlw	_line0&0ffh
  1608  0084  0084               	movwf	fsr0
  1609  0085  0840               	movf	(??_updateSpace+0)+0,w
  1610  0086  0080               	movwf	indf
  1611                           	line	150
  1612                           ;spaceMission.c: 150: } else {
  1613  0087  288F               	goto	l901
  1614                           	
  1615  0088                     l900:	
  1616                           	line	151
  1617                           	
  1618  0088                     l3347:	
  1619                           ;spaceMission.c: 151: line0[indexLines] = 'A';
  1620  0088  3041               	movlw	(041h)
  1621  0089  00C0               	movwf	(??_updateSpace+0)+0
  1622  008A  0873               	movf	(_indexLines),w
  1623  008B  3E20               	addlw	_line0&0ffh
  1624  008C  0084               	movwf	fsr0
  1625  008D  0840               	movf	(??_updateSpace+0)+0,w
  1626  008E  0080               	movwf	indf
  1627                           	line	152
  1628                           	
  1629  008F                     l901:	
  1630                           	line	153
  1631                           ;spaceMission.c: 152: }
  1632                           ;spaceMission.c: 153: line1[indexLines] = 'A';
  1633  008F  3041               	movlw	(041h)
  1634  0090  00C0               	movwf	(??_updateSpace+0)+0
  1635  0091  0873               	movf	(_indexLines),w
  1636  0092  3E30               	addlw	_line1&0ffh
  1637  0093  0084               	movwf	fsr0
  1638  0094  0840               	movf	(??_updateSpace+0)+0,w
  1639  0095  0080               	movwf	indf
  1640                           	line	155
  1641                           ;spaceMission.c: 155: }else if(generateAsteroid()){
  1642  0096  28D7               	goto	l3359
  1643                           	
  1644  0097                     l899:	
  1645                           	
  1646  0097                     l3349:	
  1647  0097  120A  118A  22CA   	fcall	_generateAsteroid
              120A  118A         
  1648  009C  3A00               	xorlw	0
  1649  009D  1903               	skipnz
  1650  009E  28A0               	goto	u2501
  1651  009F  28A1               	goto	u2500
  1652  00A0                     u2501:
  1653  00A0  28C4               	goto	l3357
  1654  00A1                     u2500:
  1655                           	line	156
  1656                           	
  1657  00A1                     l3351:	
  1658                           ;spaceMission.c: 156: if(line0[prevIndex] != 'B'){
  1659  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  1660  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  1661  00A3  0841               	movf	(updateSpace@prevIndex),w
  1662  00A4  3E20               	addlw	_line0&0ffh
  1663  00A5  0084               	movwf	fsr0
  1664  00A6  1383               	bcf	status, 7	;select IRP bank0
  1665  00A7  0800               	movf	indf,w
  1666  00A8  3A42               	xorlw	042h
  1667  00A9  1903               	skipnz
  1668  00AA  28AC               	goto	u2511
  1669  00AB  28AD               	goto	u2510
  1670  00AC                     u2511:
  1671  00AC  28B5               	goto	l3355
  1672  00AD                     u2510:
  1673                           	line	157
  1674                           	
  1675  00AD                     l3353:	
  1676                           ;spaceMission.c: 157: line1[indexLines] = 'B';
  1677  00AD  3042               	movlw	(042h)
  1678  00AE  00C0               	movwf	(??_updateSpace+0)+0
  1679  00AF  0873               	movf	(_indexLines),w
  1680  00B0  3E30               	addlw	_line1&0ffh
  1681  00B1  0084               	movwf	fsr0
  1682  00B2  0840               	movf	(??_updateSpace+0)+0,w
  1683  00B3  0080               	movwf	indf
  1684                           	line	158
  1685                           ;spaceMission.c: 158: } else {
  1686  00B4  28BC               	goto	l905
  1687                           	
  1688  00B5                     l904:	
  1689                           	line	159
  1690                           	
  1691  00B5                     l3355:	
  1692                           ;spaceMission.c: 159: line1[indexLines] = 'A';
  1693  00B5  3041               	movlw	(041h)
  1694  00B6  00C0               	movwf	(??_updateSpace+0)+0
  1695  00B7  0873               	movf	(_indexLines),w
  1696  00B8  3E30               	addlw	_line1&0ffh
  1697  00B9  0084               	movwf	fsr0
  1698  00BA  0840               	movf	(??_updateSpace+0)+0,w
  1699  00BB  0080               	movwf	indf
  1700                           	line	160
  1701                           	
  1702  00BC                     l905:	
  1703                           	line	161
  1704                           ;spaceMission.c: 160: }
  1705                           ;spaceMission.c: 161: line0[indexLines] = 'A';
  1706  00BC  3041               	movlw	(041h)
  1707  00BD  00C0               	movwf	(??_updateSpace+0)+0
  1708  00BE  0873               	movf	(_indexLines),w
  1709  00BF  3E20               	addlw	_line0&0ffh
  1710  00C0  0084               	movwf	fsr0
  1711  00C1  0840               	movf	(??_updateSpace+0)+0,w
  1712  00C2  0080               	movwf	indf
  1713                           	line	162
  1714                           ;spaceMission.c: 162: } else {
  1715  00C3  28D7               	goto	l3359
  1716                           	
  1717  00C4                     l903:	
  1718                           	line	164
  1719                           	
  1720  00C4                     l3357:	
  1721                           ;spaceMission.c: 164: line0[indexLines] = 'A';
  1722  00C4  3041               	movlw	(041h)
  1723  00C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1724  00C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1725  00C7  00C0               	movwf	(??_updateSpace+0)+0
  1726  00C8  0873               	movf	(_indexLines),w
  1727  00C9  3E20               	addlw	_line0&0ffh
  1728  00CA  0084               	movwf	fsr0
  1729  00CB  0840               	movf	(??_updateSpace+0)+0,w
  1730  00CC  1383               	bcf	status, 7	;select IRP bank0
  1731  00CD  0080               	movwf	indf
  1732                           	line	165
  1733                           ;spaceMission.c: 165: line1[indexLines] = 'A';
  1734  00CE  3041               	movlw	(041h)
  1735  00CF  00C0               	movwf	(??_updateSpace+0)+0
  1736  00D0  0873               	movf	(_indexLines),w
  1737  00D1  3E30               	addlw	_line1&0ffh
  1738  00D2  0084               	movwf	fsr0
  1739  00D3  0840               	movf	(??_updateSpace+0)+0,w
  1740  00D4  0080               	movwf	indf
  1741  00D5  28D7               	goto	l3359
  1742                           	line	166
  1743                           	
  1744  00D6                     l906:	
  1745  00D6  28D7               	goto	l3359
  1746                           	
  1747  00D7                     l902:	
  1748                           	line	169
  1749                           	
  1750  00D7                     l3359:	
  1751                           ;spaceMission.c: 166: }
  1752                           ;spaceMission.c: 169: if (++indexLines > 15){
  1753  00D7  3001               	movlw	(01h)
  1754  00D8  00C0               	movwf	(??_updateSpace+0)+0
  1755  00D9  0840               	movf	(??_updateSpace+0)+0,w
  1756  00DA  07F3               	addwf	(_indexLines),f
  1757  00DB  3010               	movlw	(010h)
  1758  00DC  0273               	subwf	((_indexLines)),w
  1759  00DD  1C03               	skipc
  1760  00DE  28E0               	goto	u2521
  1761  00DF  28E1               	goto	u2520
  1762  00E0                     u2521:
  1763  00E0  28E7               	goto	l3363
  1764  00E1                     u2520:
  1765                           	line	170
  1766                           	
  1767  00E1                     l3361:	
  1768                           ;spaceMission.c: 170: indexLines = 0;
  1769  00E1  1003               	clrc
  1770  00E2  3000               	movlw	0
  1771  00E3  1803               	btfsc	status,0
  1772  00E4  3001               	movlw	1
  1773  00E5  00F3               	movwf	(_indexLines)
  1774  00E6  28E7               	goto	l3363
  1775                           	line	171
  1776                           	
  1777  00E7                     l907:	
  1778                           	line	174
  1779                           	
  1780  00E7                     l3363:	
  1781                           ;spaceMission.c: 171: }
  1782                           ;spaceMission.c: 174: checkCollision();
  1783  00E7  120A  118A  22C5   	fcall	_checkCollision
              120A  118A         
  1784                           	line	179
  1785                           	
  1786  00EC                     l908:	
  1787  00EC  0008               	return
  1788                           	opt stack 0
  1789                           GLOBAL	__end_of_updateSpace
  1790  00ED                     	__end_of_updateSpace:
  1791 ;; =============== function _updateSpace ends ============
  1792                           
  1793                           	signat	_updateSpace,88
  1794                           	global	_endMission
  1795                           psect	text441,local,class=CODE,delta=2
  1796                           global __ptext441
  1797  02CD                     __ptext441:
  1798                           
  1799 ;; *************** function _endMission *****************
  1800 ;; Defined at:
  1801 ;;		line 215 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;		None               void
  1808 ;; Registers used:
  1809 ;;		None
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           psect	text441
  1829                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1830                           	line	215
  1831                           	global	__size_of_endMission
  1832  0001                     	__size_of_endMission	equ	__end_of_endMission-_endMission
  1833                           	
  1834  02CD                     _endMission:	
  1835                           	opt	stack 6
  1836                           ; Regs used in _endMission: []
  1837                           	line	217
  1838                           	
  1839  02CD                     l920:	
  1840  02CD  0008               	return
  1841                           	opt stack 0
  1842                           GLOBAL	__end_of_endMission
  1843  02CE                     	__end_of_endMission:
  1844 ;; =============== function _endMission ends ============
  1845                           
  1846                           	signat	_endMission,88
  1847                           	global	_initCountDown
  1848                           psect	text442,local,class=CODE,delta=2
  1849                           global __ptext442
  1850  02B6                     __ptext442:
  1851                           
  1852 ;; *************** function _initCountDown *****************
  1853 ;; Defined at:
  1854 ;;		line 201 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;		None               void
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           psect	text442
  1882                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1883                           	line	201
  1884                           	global	__size_of_initCountDown
  1885  000F                     	__size_of_initCountDown	equ	__end_of_initCountDown-_initCountDown
  1886                           	
  1887  02B6                     _initCountDown:	
  1888                           	opt	stack 6
  1889                           ; Regs used in _initCountDown: [wreg+status,2+status,0]
  1890                           	line	203
  1891                           	
  1892  02B6                     l3315:	
  1893                           ;spaceMission.c: 203: T0CS=0;
  1894  02B6  1683               	bsf	status, 5	;RP0=1, select bank1
  1895  02B7  1303               	bcf	status, 6	;RP1=0, select bank1
  1896  02B8  1281               	bcf	(1037/8)^080h,(1037)&7
  1897                           	line	204
  1898                           ;spaceMission.c: 204: PSA=0;
  1899  02B9  1181               	bcf	(1035/8)^080h,(1035)&7
  1900                           	line	206
  1901                           ;spaceMission.c: 206: PS2=1; PS1=1; PS0=1;
  1902  02BA  1501               	bsf	(1034/8)^080h,(1034)&7
  1903  02BB  1481               	bsf	(1033/8)^080h,(1033)&7
  1904  02BC  1401               	bsf	(1032/8)^080h,(1032)&7
  1905                           	line	208
  1906                           ;spaceMission.c: 208: T0IF=0;
  1907  02BD  110B               	bcf	(90/8),(90)&7
  1908                           	line	209
  1909                           ;spaceMission.c: 209: T0IE=1;
  1910  02BE  168B               	bsf	(93/8),(93)&7
  1911                           	line	211
  1912                           	
  1913  02BF                     l3317:	
  1914                           ;spaceMission.c: 211: divider=0;
  1915  02BF  1003               	clrc
  1916  02C0  3000               	movlw	0
  1917  02C1  1803               	btfsc	status,0
  1918  02C2  3001               	movlw	1
  1919  02C3  00F2               	movwf	(_divider)
  1920                           	line	212
  1921                           	
  1922  02C4                     l917:	
  1923  02C4  0008               	return
  1924                           	opt stack 0
  1925                           GLOBAL	__end_of_initCountDown
  1926  02C5                     	__end_of_initCountDown:
  1927 ;; =============== function _initCountDown ends ============
  1928                           
  1929                           	signat	_initCountDown,88
  1930                           	global	_checkCollision
  1931                           psect	text443,local,class=CODE,delta=2
  1932                           global __ptext443
  1933  02C5                     __ptext443:
  1934                           
  1935 ;; *************** function _checkCollision *****************
  1936 ;; Defined at:
  1937 ;;		line 112 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;		None               void
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0
  1954 ;;      Totals:         0       0       0       0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_updateSpace
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           psect	text443
  1965                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  1966                           	line	112
  1967                           	global	__size_of_checkCollision
  1968  0005                     	__size_of_checkCollision	equ	__end_of_checkCollision-_checkCollision
  1969                           	
  1970  02C5                     _checkCollision:	
  1971                           	opt	stack 5
  1972                           ; Regs used in _checkCollision: [wreg-fsr0h+status,2+status,0]
  1973                           	line	116
  1974                           	
  1975  02C5                     l3309:	
  1976  02C5  2AC9               	goto	l891
  1977                           	
  1978  02C6                     l3311:	
  1979  02C6  2AC9               	goto	l891
  1980                           	line	118
  1981                           	
  1982  02C7                     l889:	
  1983                           	line	119
  1984  02C7  2AC9               	goto	l891
  1985                           	
  1986  02C8                     l3313:	
  1987  02C8  2AC9               	goto	l891
  1988                           	line	121
  1989                           	
  1990  02C9                     l890:	
  1991                           	line	122
  1992                           	
  1993  02C9                     l891:	
  1994  02C9  0008               	return
  1995                           	opt stack 0
  1996                           GLOBAL	__end_of_checkCollision
  1997  02CA                     	__end_of_checkCollision:
  1998 ;; =============== function _checkCollision ends ============
  1999                           
  2000                           	signat	_checkCollision,88
  2001                           	global	_generateAsteroid
  2002                           psect	text444,local,class=CODE,delta=2
  2003                           global __ptext444
  2004  02CA                     __ptext444:
  2005                           
  2006 ;; *************** function _generateAsteroid *****************
  2007 ;; Defined at:
  2008 ;;		line 108 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      unsigned char 
  2015 ;; Registers used:
  2016 ;;		wreg
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_updateSpace
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           psect	text444
  2036                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2037                           	line	108
  2038                           	global	__size_of_generateAsteroid
  2039  0003                     	__size_of_generateAsteroid	equ	__end_of_generateAsteroid-_generateAsteroid
  2040                           	
  2041  02CA                     _generateAsteroid:	
  2042                           	opt	stack 5
  2043                           ; Regs used in _generateAsteroid: [wreg]
  2044                           	line	109
  2045                           	
  2046  02CA                     l3305:	
  2047                           ;spaceMission.c: 109: return 1;
  2048  02CA  3001               	movlw	(01h)
  2049  02CB  2ACC               	goto	l886
  2050                           	
  2051  02CC                     l3307:	
  2052                           	line	110
  2053                           	
  2054  02CC                     l886:	
  2055  02CC  0008               	return
  2056                           	opt stack 0
  2057                           GLOBAL	__end_of_generateAsteroid
  2058  02CD                     	__end_of_generateAsteroid:
  2059 ;; =============== function _generateAsteroid ends ============
  2060                           
  2061                           	signat	_generateAsteroid,89
  2062                           	global	_displayPoints
  2063                           psect	text445,local,class=CODE,delta=2
  2064                           global __ptext445
  2065  02CE                     __ptext445:
  2066                           
  2067 ;; *************** function _displayPoints *****************
  2068 ;; Defined at:
  2069 ;;		line 89 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;		None               void
  2076 ;; Registers used:
  2077 ;;		None
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0
  2086 ;;      Totals:         0       0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           psect	text445
  2097                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2098                           	line	89
  2099                           	global	__size_of_displayPoints
  2100  0001                     	__size_of_displayPoints	equ	__end_of_displayPoints-_displayPoints
  2101                           	
  2102  02CE                     _displayPoints:	
  2103                           	opt	stack 6
  2104                           ; Regs used in _displayPoints: []
  2105                           	line	91
  2106                           	
  2107  02CE                     l880:	
  2108  02CE  0008               	return
  2109                           	opt stack 0
  2110                           GLOBAL	__end_of_displayPoints
  2111  02CF                     	__end_of_displayPoints:
  2112 ;; =============== function _displayPoints ends ============
  2113                           
  2114                           	signat	_displayPoints,88
  2115                           	global	_displayCountDown
  2116                           psect	text446,local,class=CODE,delta=2
  2117                           global __ptext446
  2118  02CF                     __ptext446:
  2119                           
  2120 ;; *************** function _displayCountDown *****************
  2121 ;; Defined at:
  2122 ;;		line 85 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;		None               void
  2129 ;; Registers used:
  2130 ;;		None
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0
  2139 ;;      Totals:         0       0       0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           psect	text446
  2150                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2151                           	line	85
  2152                           	global	__size_of_displayCountDown
  2153  0001                     	__size_of_displayCountDown	equ	__end_of_displayCountDown-_displayCountDown
  2154                           	
  2155  02CF                     _displayCountDown:	
  2156                           	opt	stack 6
  2157                           ; Regs used in _displayCountDown: []
  2158                           	line	87
  2159                           	
  2160  02CF                     l877:	
  2161  02CF  0008               	return
  2162                           	opt stack 0
  2163                           GLOBAL	__end_of_displayCountDown
  2164  02D0                     	__end_of_displayCountDown:
  2165 ;; =============== function _displayCountDown ends ============
  2166                           
  2167                           	signat	_displayCountDown,88
  2168                           	global	_updateAsteroidsSpeed
  2169                           psect	text447,local,class=CODE,delta=2
  2170                           global __ptext447
  2171  02D0                     __ptext447:
  2172                           
  2173 ;; *************** function _updateAsteroidsSpeed *****************
  2174 ;; Defined at:
  2175 ;;		line 79 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		None
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           psect	text447
  2203                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2204                           	line	79
  2205                           	global	__size_of_updateAsteroidsSpeed
  2206  0001                     	__size_of_updateAsteroidsSpeed	equ	__end_of_updateAsteroidsSpeed-_updateAsteroidsSpeed
  2207                           	
  2208  02D0                     _updateAsteroidsSpeed:	
  2209                           	opt	stack 6
  2210                           ; Regs used in _updateAsteroidsSpeed: []
  2211                           	line	83
  2212                           	
  2213  02D0                     l874:	
  2214  02D0  0008               	return
  2215                           	opt stack 0
  2216                           GLOBAL	__end_of_updateAsteroidsSpeed
  2217  02D1                     	__end_of_updateAsteroidsSpeed:
  2218 ;; =============== function _updateAsteroidsSpeed ends ============
  2219                           
  2220                           	signat	_updateAsteroidsSpeed,88
  2221                           	global	_isr
  2222                           psect	text448,local,class=CODE,delta=2
  2223                           global __ptext448
  2224  01A6                     __ptext448:
  2225                           
  2226 ;; *************** function _isr *****************
  2227 ;; Defined at:
  2228 ;;		line 40 in file "C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;		None               void
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0
  2244 ;;      Temps:          5       0       0       0       0
  2245 ;;      Totals:         5       0       0       0       0
  2246 ;;Total ram usage:        5 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		Interrupt level 1
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           psect	text448
  2255                           	file	"C:\Users\Michele\Documents\GitHub\spaceMission\spaceMission.c"
  2256                           	line	40
  2257                           	global	__size_of_isr
  2258  003C                     	__size_of_isr	equ	__end_of_isr-_isr
  2259                           	
  2260  01A6                     _isr:	
  2261                           	opt	stack 4
  2262                           ; Regs used in _isr: [wreg+status,2+status,0]
  2263                           psect	intentry,class=CODE,delta=2
  2264                           global __pintentry
  2265  0004                     __pintentry:
  2266                           global interrupt_function
  2267  0004                     interrupt_function:
  2268                           	global saved_w
  2269  007E                     	saved_w	set	btemp+0
  2270  0004  00FE               	movwf	saved_w
  2271  0005  0803               	movf	status,w
  2272  0006  00F6               	movwf	(??_isr+1)
  2273  0007  0804               	movf	fsr0,w
  2274  0008  00F7               	movwf	(??_isr+2)
  2275  0009  080A               	movf	pclath,w
  2276  000A  00F8               	movwf	(??_isr+3)
  2277  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  2278  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  2279  000D  087F               	movf	btemp+1,w
  2280  000E  00F9               	movwf	(??_isr+4)
  2281  000F  120A  118A  29A6   	ljmp	_isr
  2282                           psect	text448
  2283                           	line	42
  2284                           	
  2285  01A6                     i1l2159:	
  2286                           ;spaceMission.c: 42: GIE=0;
  2287  01A6  138B               	bcf	(95/8),(95)&7
  2288                           	line	49
  2289                           ;spaceMission.c: 49: if (T0IF == 1){
  2290  01A7  1D0B               	btfss	(90/8),(90)&7
  2291  01A8  29AA               	goto	u1_21
  2292  01A9  29AB               	goto	u1_20
  2293  01AA                     u1_21:
  2294  01AA  29D6               	goto	i1l2183
  2295  01AB                     u1_20:
  2296                           	line	50
  2297                           	
  2298  01AB                     i1l2161:	
  2299                           ;spaceMission.c: 50: T0IF=0;
  2300  01AB  110B               	bcf	(90/8),(90)&7
  2301                           	line	51
  2302                           	
  2303  01AC                     i1l2163:	
  2304                           ;spaceMission.c: 51: if (divider==25){
  2305  01AC  0872               	movf	(_divider),w
  2306  01AD  3A19               	xorlw	019h
  2307  01AE  1D03               	skipz
  2308  01AF  29B1               	goto	u2_21
  2309  01B0  29B2               	goto	u2_20
  2310  01B1                     u2_21:
  2311  01B1  29D0               	goto	i1l2181
  2312  01B2                     u2_20:
  2313                           	line	52
  2314                           	
  2315  01B2                     i1l2165:	
  2316                           ;spaceMission.c: 52: divider=0;
  2317  01B2  1003               	clrc
  2318  01B3  3000               	movlw	0
  2319  01B4  1803               	btfsc	status,0
  2320  01B5  3001               	movlw	1
  2321  01B6  00F2               	movwf	(_divider)
  2322                           	line	53
  2323                           	
  2324  01B7                     i1l2167:	
  2325                           ;spaceMission.c: 53: status |= 0x8;
  2326  01B7  15F4               	bsf	(_status)+(3/8),(3)&7
  2327                           	line	54
  2328                           	
  2329  01B8                     i1l2169:	
  2330                           ;spaceMission.c: 54: if(digit0 == 0){
  2331  01B8  08F0               	movf	(_digit0),f
  2332  01B9  1D03               	skipz
  2333  01BA  29BC               	goto	u3_21
  2334  01BB  29BD               	goto	u3_20
  2335  01BC                     u3_21:
  2336  01BC  29CC               	goto	i1l2179
  2337  01BD                     u3_20:
  2338                           	line	55
  2339                           	
  2340  01BD                     i1l2171:	
  2341                           ;spaceMission.c: 55: if(digit1 == 0){
  2342  01BD  08F1               	movf	(_digit1),f
  2343  01BE  1D03               	skipz
  2344  01BF  29C1               	goto	u4_21
  2345  01C0  29C2               	goto	u4_20
  2346  01C1                     u4_21:
  2347  01C1  29C4               	goto	i1l2175
  2348  01C2                     u4_20:
  2349  01C2  29D6               	goto	i1l2183
  2350                           	line	58
  2351                           	
  2352  01C3                     i1l2173:	
  2353                           ;spaceMission.c: 58: }else{
  2354  01C3  29D6               	goto	i1l2183
  2355                           	
  2356  01C4                     i1l862:	
  2357                           	line	60
  2358                           	
  2359  01C4                     i1l2175:	
  2360                           ;spaceMission.c: 60: digit1--;
  2361  01C4  3001               	movlw	low(01h)
  2362  01C5  02F1               	subwf	(_digit1),f
  2363                           	line	61
  2364                           	
  2365  01C6                     i1l2177:	
  2366                           ;spaceMission.c: 61: digit0 = 9;
  2367  01C6  3009               	movlw	(09h)
  2368  01C7  00F5               	movwf	(??_isr+0)+0
  2369  01C8  0875               	movf	(??_isr+0)+0,w
  2370  01C9  00F0               	movwf	(_digit0)
  2371  01CA  29D6               	goto	i1l2183
  2372                           	line	62
  2373                           	
  2374  01CB                     i1l863:	
  2375                           	line	63
  2376                           ;spaceMission.c: 62: }
  2377                           ;spaceMission.c: 63: }else
  2378  01CB  29D6               	goto	i1l2183
  2379                           	
  2380  01CC                     i1l861:	
  2381                           	line	64
  2382                           	
  2383  01CC                     i1l2179:	
  2384                           ;spaceMission.c: 64: digit0--;
  2385  01CC  3001               	movlw	low(01h)
  2386  01CD  02F0               	subwf	(_digit0),f
  2387  01CE  29D6               	goto	i1l2183
  2388                           	
  2389  01CF                     i1l864:	
  2390                           	line	65
  2391                           ;spaceMission.c: 65: }
  2392  01CF  29D6               	goto	i1l2183
  2393                           	line	66
  2394                           	
  2395  01D0                     i1l860:	
  2396                           	line	67
  2397                           	
  2398  01D0                     i1l2181:	
  2399                           ;spaceMission.c: 66: else
  2400                           ;spaceMission.c: 67: divider++;
  2401  01D0  3001               	movlw	(01h)
  2402  01D1  00F5               	movwf	(??_isr+0)+0
  2403  01D2  0875               	movf	(??_isr+0)+0,w
  2404  01D3  07F2               	addwf	(_divider),f
  2405  01D4  29D6               	goto	i1l2183
  2406                           	
  2407  01D5                     i1l865:	
  2408  01D5  29D6               	goto	i1l2183
  2409                           	line	68
  2410                           	
  2411  01D6                     i1l859:	
  2412                           	line	69
  2413                           	
  2414  01D6                     i1l2183:	
  2415                           ;spaceMission.c: 68: }
  2416                           ;spaceMission.c: 69: GIE=1;
  2417  01D6  178B               	bsf	(95/8),(95)&7
  2418                           	line	70
  2419                           	
  2420  01D7                     i1l866:	
  2421  01D7  0879               	movf	(??_isr+4),w
  2422  01D8  00FF               	movwf	btemp+1
  2423  01D9  0878               	movf	(??_isr+3),w
  2424  01DA  008A               	movwf	pclath
  2425  01DB  0877               	movf	(??_isr+2),w
  2426  01DC  0084               	movwf	fsr0
  2427  01DD  0876               	movf	(??_isr+1),w
  2428  01DE  0083               	movwf	status
  2429  01DF  0EFE               	swapf	saved_w,f
  2430  01E0  0E7E               	swapf	saved_w,w
  2431  01E1  0009               	retfie
  2432                           	opt stack 0
  2433                           GLOBAL	__end_of_isr
  2434  01E2                     	__end_of_isr:
  2435 ;; =============== function _isr ends ============
  2436                           
  2437                           	signat	_isr,88
  2438                           psect	text449,local,class=CODE,delta=2
  2439                           global __ptext449
  2440  0000                     __ptext449:
  2441                           	global	btemp
  2442  007E                     	btemp set 07Eh
  2443                           
  2444                           	DABS	1,126,2	;btemp
  2445                           	global	wtemp0
  2446  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Thu Apr 10 15:33:03 2014

                            pc 0002                             fsr 0004                  ?_displaySpace 0075  
                          l900 0088                            l901 008F                            l902 00D7  
                          l903 00C4                            l920 02CD                            l904 00B5  
                          l905 00BC                            l906 00D6                            l930 014C  
                          l907 00E7                            l931 014C                            l923 0116  
                          l908 00EC                            l924 0126                            l917 02C4  
                          l925 0135                            l927 012F                            l880 02CE  
                          l928 014A                            l929 014B                            l874 02D0  
                          l890 02C9                            l891 02C9                            l883 0276  
                          l877 02CF                            l886 02CC                            l894 0054  
                          l896 004B                            l889 02C7                            l897 0065  
                          l898 006A                            l899 0097                            _GIE 005F  
                          _RA0 0028                            _RA1 0029                            _RB4 0034  
                          _RB5 0035                            _PS0 0408                            _PS1 0409  
                          _PS2 040A                            _PSA 040B                            _map 0025  
                          _isr 01A6                            fsr0 0004                            indf 0000  
               ?_displayPoints 0075                           l3311 02C6                           l3305 02CA  
                         l3313 02C8                           l3401 0155                           l3307 02CC  
                         l3315 02B6                           l3331 004B                           l3411 0167  
                         l3403 0156                           l3309 02C5                           l3317 02BF  
                         l3341 006A                           l3333 0054                           l3421 0177  
                         l3413 0170                           l3405 015F                           l3351 00A1  
                         l3343 0074                           l3335 005B                           l3327 0037  
                         l3431 018E                           l3423 0178                           l3415 0173  
                         l3407 0165                           l3361 00E1                           l3353 00AD  
                         l3345 0080                           l3337 005F                           l3329 0041  
                         l3433 0194                           l3425 0181                           l3417 0174  
                         l3409 0166                           l3441 00EE                           l3363 00E7  
                         l3355 00B5                           l3347 0088                           l3339 0065  
                         l3371 01FC                           l1771 02A4                           l3435 019A  
                         l3427 0184                           l3419 0176                           l3451 010F  
                         l3443 00F2                           l3357 00C4                           l3349 0097  
                         l3373 01FD                           l3365 01E5                           l3381 0293  
                         l3437 019F                           l3429 0185                           l3461 0126  
                         l3453 0114                           l3445 00FA                           l1774 022B  
                         l3359 00D7                           l3375 0204                           l3367 01EA  
                         l3383 0299                           l1775 0214                           l3391 022B  
                         l3471 0144                           l3463 012A                           l3455 0116  
                         l3447 00FF                           l3439 00ED                           l1768 020F  
                         l1776 023A                           l3377 0205                           l3369 01FB  
                         l1777 023A                           l3385 0210                           l3393 025B  
                         l3465 012F                           l3457 011A                           l3449 0104  
                         l1786 01A5                           l3379 0290                           l3387 0214  
                         l3395 0260                           l3467 0135                           l3459 011F  
                         l3389 0222                           l3397 026B                           l3469 013F  
                         l3399 014F                           ?_isr 0075                           STR_1 002F  
                         _T0IE 005D                           _T0IF 005A                           _T0CS 040D  
                         u2500 00A1                           u2501 00A0                           u2510 00AD  
                         u2511 00AC                           u2520 00E1                           u2521 00E0  
                         u2450 0041                           u2451 0040                           u2460 004A  
                         u2540 0239                           u2461 0049                           u2541 0238  
                         u2470 005F                           u2550 011A                           u2535 01EF  
                         u2607 017C                           u2551 0119                           u2480 0074  
                         u2560 012A                           u2481 0073                           u2617 0189  
                         u2561 0129                           u2490 0080                           u2570 012E  
                         u2491 007F                           u2627 029F                           u2571 012D  
                         u2637 01E7                           u2647 020A                           u2587 015B  
                         u2597 016B                           u1_20 01AB                           u1_21 01AA  
                         u2_20 01B2                           u2_21 01B1                           u3_20 01BD  
                         u3_21 01BC                           u4_20 01C2                           u4_21 01C1  
              ?_checkCollision 0075                           _main 00ED                           btemp 007E  
                         start 0012                          ??_isr 0075                 ??_displaySpace 0045  
                        ?_main 0075                          _ANSEL 0188               _generateAsteroid 02CA  
                        i1l860 01D0                          i1l861 01CC                          i1l862 01C4  
                        i1l863 01CB                          i1l864 01CF                          i1l865 01D5  
                        i1l866 01D7                          i1l859 01D6                          _PORTB 0006  
                        _PORTD 0008                          _TRISB 0086                          _TRISD 0088  
                        _line0 0020                          _line1 0030                          pclath 000A  
       __size_of_initCountDown 000F                          status 0003                          wtemp0 007E  
                 __end_of_main 014F           _updateAsteroidsSpeed 02D0                         ??_main 0048  
              ??_displayPoints 0040                         _ANSELH 0189                         i1l2161 01AB  
                       i1l2171 01BD                         i1l2163 01AC                         i1l2173 01C3  
                       i1l2165 01B2                         i1l2181 01D0                         i1l2175 01C4  
                       i1l2167 01B7                         i1l2183 01D6                         i1l2159 01A6  
                       i1l2177 01C6                         i1l2169 01B8                         i1l2179 01CC  
                       _INTCON 000B               __end_of_lcd_init 01A6               __end_of_lcd_puts 023B  
        ?_updateAsteroidsSpeed 0075                         _digit0 0070                         _digit1 0071  
                _initCountDown 02B6                         _points 0049                         _status 0074  
                       saved_w 007E           __end_of_displaySpace 0277              ?_displayCountDown 0075  
                 ?_updateSpace 0075                 __pcstackCOMMON 0075                   __pidataBANK0 023B  
           ??_displayCountDown 0040                 ?_initCountDown 0075             __size_of_lcd_clear 0015  
             ??_checkCollision 0040             __size_of_lcd_write 002E                     __pbssBANK0 0049  
     __end_of_generateAsteroid 02CD         ??_updateAsteroidsSpeed 0040                     __pmaintext 00ED  
                   _endMission 02CD                     __pintentry 0004                      ?_lcd_init 0075  
                    ?_lcd_puts 0043                     _indexLines 0073              __end_of_lcd_clear 02A5  
              ??_initCountDown 0040           updateSpace@prevIndex 0041              __end_of_lcd_write 0210  
                      _divider 0072                   __size_of_isr 003C          __size_of_displaySpace 001C  
                   ??_lcd_init 0045                     ??_lcd_puts 0045           end_of_initialization 028C  
                      init_ram 02A9                    ?_endMission 0075           __size_of_updateSpace 00B6  
                 _displaySpace 025B          __end_of_displayPoints 02CF                     lcd_write@c 0042  
    __size_of_displayCountDown 0001            start_initialization 0277                    __end_of_isr 01E2  
          __size_of_endMission 0001             lcd_init@init_value 0047              ?_generateAsteroid 0075  
           ??_generateAsteroid 0040                    __pdataBANK0 0020                    __pbssCOMMON 0070  
                __pcstackBANK0 0040              __size_of_lcd_init 0057              __size_of_lcd_puts 002B  
                    __ptext440 0037                      __ptext441 02CD                      __ptext442 02B6  
                    __ptext443 02C5                      __ptext435 014F  __size_of_updateAsteroidsSpeed 0001  
                    __ptext444 02CA                      __ptext436 025B                      __ptext445 02CE  
                    __ptext437 0210                      __ptext446 02CF                      __ptext438 0290  
                    __ptext447 02D0                      __ptext439 01E2                      __ptext448 01A6  
                    __ptext449 0000                      _lcd_clear 0290                      __pstrings 0015  
                    _lcd_write 01E2              interrupt_function 0004        __size_of_checkCollision 0005  
                 ??_endMission 0040          __end_of_initCountDown 02C5                     ?_lcd_clear 0075  
                  __stringbase 0024                     ?_lcd_write 0075               _displayCountDown 02CF  
                    lcd_puts@s 0043             __end_of_endMission 02CE                  ??_updateSpace 0040  
                    init_fetch 02A5                       _lcd_init 014F                       _lcd_puts 0210  
                __size_of_main 0062         __size_of_displayPoints 0001                    ??_lcd_clear 0043  
          __end_of_updateSpace 00ED                    ??_lcd_write 0040      __size_of_generateAsteroid 0003  
                     intlevel1 0000                 _checkCollision 02C5                      stringcode 001F  
                     stringdir 001F                       stringtab 0015   __end_of_updateAsteroidsSpeed 02D1  
                _displayPoints 02CE         __end_of_checkCollision 02CA       __end_of_displayCountDown 02D0  
                  _updateSpace 0037  
