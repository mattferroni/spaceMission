

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Fri Mar 21 11:03:43 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 2 "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 2 "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
    45  2007  23E2               	dw 0x23E2 ;#
    46                           	FNCALL	_main,_initCountDown
    47                           	FNCALL	_main,_endMission
    48                           	FNCALL	_main,_updateCountDown
    49                           	FNCALL	_main,_updatePoints
    50                           	FNCALL	_main,_updateSpace
    51                           	FNCALL	_main,_updateAsteroidsSpeed
    52                           	FNCALL	_updateCountDown,_sleep
    53                           	FNROOT	_main
    54                           	FNCALL	intlevel1,_isr
    55                           	global	intlevel1
    56                           	FNROOT	intlevel1
    57                           	global	_map
    58                           psect	strings,class=STRING,delta=2
    59                           global __pstrings
    60  0015                     __pstrings:
    61                           ;	global	stringdir,stringtab,__stringbase
    62  0015                     stringtab:
    63                           ;	String table - string pointers are 1 byte each
    64  0015                     stringcode:stringdir:
      + 0015                     stringdir:	
    65  0015  3000               movlw high(stringdir)
    66  0016  008A               movwf pclath
    67  0017  0804               movf fsr,w
    68  0018  0A84               incf fsr
    69  0019  0782               	addwf pc
    70  001A                     __stringbase:
    71  001A  3400               	retlw	0
    72                           psect	strings
    73                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
    74                           	line	7
    75  001B                     _map:
    76  001B  343F               	retlw	03Fh
    77  001C  3406               	retlw	06h
    78  001D  345B               	retlw	05Bh
    79  001E  344F               	retlw	04Fh
    80  001F  3466               	retlw	066h
    81  0020  346D               	retlw	06Dh
    82  0021  347D               	retlw	07Dh
    83  0022  3407               	retlw	07h
    84  0023  347F               	retlw	07Fh
    85  0024  346F               	retlw	06Fh
    86                           	global	_map
    87                           	global	_collision
    88                           	global	_digit0
    89                           	global	_digit1
    90                           	global	_endGame
    91                           	global	_divider
    92                           	global	_PORTD
    93  0008                     _PORTD	set	8
    94                           	global	_GIE
    95  005F                     _GIE	set	95
    96                           	global	_RA0
    97  0028                     _RA0	set	40
    98                           	global	_RA1
    99  0029                     _RA1	set	41
   100                           	global	_T0IE
   101  005D                     _T0IE	set	93
   102                           	global	_T0IF
   103  005A                     _T0IF	set	90
   104                           	global	_TRISD
   105  0088                     _TRISD	set	136
   106                           	global	_PS0
   107  0408                     _PS0	set	1032
   108                           	global	_PS1
   109  0409                     _PS1	set	1033
   110                           	global	_PS2
   111  040A                     _PS2	set	1034
   112                           	global	_PSA
   113  040B                     _PSA	set	1035
   114                           	global	_T0CS
   115  040D                     _T0CS	set	1037
   116                           	global	_ANSEL
   117  0188                     _ANSEL	set	392
   118                           	global	_ANSELH
   119  0189                     _ANSELH	set	393
   120                           	file	"SpaceMission.as"
   121                           	line	#
   122                           psect cinit,class=CODE,delta=2
   123                           global start_initialization
   124  010D                     start_initialization:
   125                           
   126                           psect	bssCOMMON,class=COMMON,space=1
   127                           global __pbssCOMMON
   128  0070                     __pbssCOMMON:
   129  0070                     _digit0:
   130  0070                            ds      2
   131                           
   132  0072                     _digit1:
   133  0072                            ds      2
   134                           
   135  0074                     _endGame:
   136  0074                            ds      2
   137                           
   138  0076                     _divider:
   139  0076                            ds      1
   140                           
   141                           psect	bssBANK0,class=BANK0,space=1
   142                           global __pbssBANK0
   143  0020                     __pbssBANK0:
   144  0020                     _collision:
   145  0020                            ds      2
   146                           
   147                           ; Clear objects allocated to COMMON
   148                           psect cinit,class=CODE,delta=2
   149  010D  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
   150  010E  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
   151  010F  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
   152  0110  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
   153  0111  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
   154  0112  01F5               	clrf	((__pbssCOMMON)+5)&07Fh
   155  0113  01F6               	clrf	((__pbssCOMMON)+6)&07Fh
   156                           ; Clear objects allocated to BANK0
   157                           psect cinit,class=CODE,delta=2
   158  0114  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   159  0115  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   160                           psect cinit,class=CODE,delta=2
   161                           global end_of_initialization
   162                           
   163                           ;End of C runtime variable initialization code
   164                           
   165  0116                     end_of_initialization:
   166  0116  0183               clrf status
   167  0117  120A  118A  286D   ljmp _main	;jump to C main() function
   168                           psect	cstackCOMMON,class=COMMON,space=1
   169                           global __pcstackCOMMON
   170  0077                     __pcstackCOMMON:
   171                           	global	?_initCountDown
   172  0077                     ?_initCountDown:	; 0 bytes @ 0x0
   173                           	global	?_endMission
   174  0077                     ?_endMission:	; 0 bytes @ 0x0
   175                           	global	?_updateCountDown
   176  0077                     ?_updateCountDown:	; 0 bytes @ 0x0
   177                           	global	?_updatePoints
   178  0077                     ?_updatePoints:	; 0 bytes @ 0x0
   179                           	global	?_updateSpace
   180  0077                     ?_updateSpace:	; 0 bytes @ 0x0
   181                           	global	?_updateAsteroidsSpeed
   182  0077                     ?_updateAsteroidsSpeed:	; 0 bytes @ 0x0
   183                           	global	?_sleep
   184  0077                     ?_sleep:	; 0 bytes @ 0x0
   185                           	global	?_isr
   186  0077                     ?_isr:	; 0 bytes @ 0x0
   187                           	global	??_isr
   188  0077                     ??_isr:	; 0 bytes @ 0x0
   189                           	global	?_main
   190  0077                     ?_main:	; 2 bytes @ 0x0
   191  0077                     	ds	5
   192                           psect	cstackBANK0,class=BANK0,space=1
   193                           global __pcstackBANK0
   194  0022                     __pcstackBANK0:
   195                           	global	??_initCountDown
   196  0022                     ??_initCountDown:	; 0 bytes @ 0x0
   197                           	global	??_endMission
   198  0022                     ??_endMission:	; 0 bytes @ 0x0
   199                           	global	??_updatePoints
   200  0022                     ??_updatePoints:	; 0 bytes @ 0x0
   201                           	global	??_updateSpace
   202  0022                     ??_updateSpace:	; 0 bytes @ 0x0
   203                           	global	??_updateAsteroidsSpeed
   204  0022                     ??_updateAsteroidsSpeed:	; 0 bytes @ 0x0
   205                           	global	??_sleep
   206  0022                     ??_sleep:	; 0 bytes @ 0x0
   207                           	global	sleep@i
   208  0022                     sleep@i:	; 2 bytes @ 0x0
   209  0022                     	ds	2
   210                           	global	??_updateCountDown
   211  0024                     ??_updateCountDown:	; 0 bytes @ 0x2
   212                           	global	??_main
   213  0024                     ??_main:	; 0 bytes @ 0x2
   214 ;;Data sizes: Strings 0, constant 10, data 0, bss 9, persistent 0 stack 0
   215 ;;Auto spaces:   Size  Autos    Used
   216 ;; COMMON          14      5      12
   217 ;; BANK0           80      2       4
   218 ;; BANK1           80      0       0
   219 ;; BANK3           96      0       0
   220 ;; BANK2           96      0       0
   221                           
   222 ;;
   223 ;; Pointer list with targets:
   224                           
   225                           
   226                           
   227 ;;
   228 ;; Critical Paths under _main in COMMON
   229 ;;
   230 ;;   None.
   231 ;;
   232 ;; Critical Paths under _isr in COMMON
   233 ;;
   234 ;;   None.
   235 ;;
   236 ;; Critical Paths under _main in BANK0
   237 ;;
   238 ;;   _updateCountDown->_sleep
   239 ;;
   240 ;; Critical Paths under _isr in BANK0
   241 ;;
   242 ;;   None.
   243 ;;
   244 ;; Critical Paths under _main in BANK1
   245 ;;
   246 ;;   None.
   247 ;;
   248 ;; Critical Paths under _isr in BANK1
   249 ;;
   250 ;;   None.
   251 ;;
   252 ;; Critical Paths under _main in BANK3
   253 ;;
   254 ;;   None.
   255 ;;
   256 ;; Critical Paths under _isr in BANK3
   257 ;;
   258 ;;   None.
   259 ;;
   260 ;; Critical Paths under _main in BANK2
   261 ;;
   262 ;;   None.
   263 ;;
   264 ;; Critical Paths under _isr in BANK2
   265 ;;
   266 ;;   None.
   267                           
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   270 ;;
   271                           
   272 ;;
   273 ;;Call Graph Tables:
   274 ;;
   275 ;; ---------------------------------------------------------------------------------
   276 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   277 ;; ---------------------------------------------------------------------------------
   278 ;; (0) _main                                                 0     0      0      68
   279 ;;                      _initCountDown
   280 ;;                         _endMission
   281 ;;                    _updateCountDown
   282 ;;                       _updatePoints
   283 ;;                        _updateSpace
   284 ;;               _updateAsteroidsSpeed
   285 ;; ---------------------------------------------------------------------------------
   286 ;; (1) _updateCountDown                                      0     0      0      68
   287 ;;                              _sleep
   288 ;; ---------------------------------------------------------------------------------
   289 ;; (2) _sleep                                                2     2      0      68
   290 ;;                                              0 BANK0      2     2      0
   291 ;; ---------------------------------------------------------------------------------
   292 ;; (1) _updateAsteroidsSpeed                                 0     0      0       0
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (1) _updateSpace                                          0     0      0       0
   295 ;; ---------------------------------------------------------------------------------
   296 ;; (1) _updatePoints                                         0     0      0       0
   297 ;; ---------------------------------------------------------------------------------
   298 ;; (1) _endMission                                           0     0      0       0
   299 ;; ---------------------------------------------------------------------------------
   300 ;; (1) _initCountDown                                        0     0      0       0
   301 ;; ---------------------------------------------------------------------------------
   302 ;; Estimated maximum stack depth 2
   303 ;; ---------------------------------------------------------------------------------
   304 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   305 ;; ---------------------------------------------------------------------------------
   306 ;; (3) _isr                                                  5     5      0       0
   307 ;;                                              0 COMMON     5     5      0
   308 ;; ---------------------------------------------------------------------------------
   309 ;; Estimated maximum stack depth 3
   310 ;; ---------------------------------------------------------------------------------
   311                           
   312 ;; Call Graph Graphs:
   313                           
   314 ;; _main (ROOT)
   315 ;;   _initCountDown
   316 ;;   _endMission
   317 ;;   _updateCountDown
   318 ;;     _sleep
   319 ;;   _updatePoints
   320 ;;   _updateSpace
   321 ;;   _updateAsteroidsSpeed
   322 ;;
   323 ;; _isr (ROOT)
   324 ;;
   325                           
   326 ;; Address spaces:
   327                           
   328 ;;Name               Size   Autos  Total    Cost      Usage
   329 ;;BITCOMMON            E      0       0       0        0.0%
   330 ;;EEDATA             100      0       0       0        0.0%
   331 ;;NULL                 0      0       0       0        0.0%
   332 ;;CODE                 0      0       0       0        0.0%
   333 ;;COMMON               E      5       C       1       85.7%
   334 ;;BITSFR0              0      0       0       1        0.0%
   335 ;;SFR0                 0      0       0       1        0.0%
   336 ;;BITSFR1              0      0       0       2        0.0%
   337 ;;SFR1                 0      0       0       2        0.0%
   338 ;;STACK                0      0       2       2        0.0%
   339 ;;ABS                  0      0      10       3        0.0%
   340 ;;BITBANK0            50      0       0       4        0.0%
   341 ;;BITSFR3              0      0       0       4        0.0%
   342 ;;SFR3                 0      0       0       4        0.0%
   343 ;;BANK0               50      2       4       5        5.0%
   344 ;;BITSFR2              0      0       0       5        0.0%
   345 ;;SFR2                 0      0       0       5        0.0%
   346 ;;BITBANK1            50      0       0       6        0.0%
   347 ;;BANK1               50      0       0       7        0.0%
   348 ;;BITBANK3            60      0       0       8        0.0%
   349 ;;BANK3               60      0       0       9        0.0%
   350 ;;BITBANK2            60      0       0      10        0.0%
   351 ;;BANK2               60      0       0      11        0.0%
   352 ;;DATA                 0      0      12      12        0.0%
   353                           
   354                           	global	_main
   355                           psect	maintext,global,class=CODE,delta=2
   356                           global __pmaintext
   357  006D                     __pmaintext:
   358                           
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 63 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  2  870[COMMON] int 
   368 ;; Registers used:
   369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 17F/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels required when called:    3
   381 ;; This function calls:
   382 ;;		_initCountDown
   383 ;;		_endMission
   384 ;;		_updateCountDown
   385 ;;		_updatePoints
   386 ;;		_updateSpace
   387 ;;		_updateAsteroidsSpeed
   388 ;; This function is called by:
   389 ;;		Startup code after reset
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           psect	maintext
   393                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   394                           	line	63
   395                           	global	__size_of_main
   396  003E                     	__size_of_main	equ	__end_of_main-_main
   397                           	
   398  006D                     _main:	
   399                           	opt	stack 5
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   401                           	line	65
   402                           	
   403  006D                     l2202:	
   404                           ;spaceMission.c: 65: ANSEL=0x00;
   405  006D  1683               	bsf	status, 5	;RP0=1, select bank3
   406  006E  1703               	bsf	status, 6	;RP1=1, select bank3
   407  006F  0188               	clrf	(392)^0180h	;volatile
   408                           	line	66
   409                           ;spaceMission.c: 66: ANSELH=0x00;
   410  0070  0189               	clrf	(393)^0180h	;volatile
   411                           	line	68
   412                           ;spaceMission.c: 68: TRISD=0b00000000;
   413  0071  1683               	bsf	status, 5	;RP0=1, select bank1
   414  0072  1303               	bcf	status, 6	;RP1=0, select bank1
   415  0073  0188               	clrf	(136)^080h	;volatile
   416                           	line	70
   417                           	
   418  0074                     l2204:	
   419                           ;spaceMission.c: 70: initCountDown();
   420  0074  120A  118A  20FE   	fcall	_initCountDown
              120A  118A         
   421                           	line	72
   422                           	
   423  0079                     l2206:	
   424                           ;spaceMission.c: 72: GIE=1;
   425  0079  178B               	bsf	(95/8),(95)&7
   426  007A  287B               	goto	l2208
   427                           	line	75
   428                           ;spaceMission.c: 75: while(1){
   429                           	
   430  007B                     l871:	
   431                           	line	78
   432                           	
   433  007B                     l2208:	
   434                           ;spaceMission.c: 78: if(endGame == 0 || collision == 1){
   435  007B  0875               	movf	(_endGame+1),w
   436  007C  0474               	iorwf	(_endGame),w
   437  007D  1903               	skipnz
   438  007E  2880               	goto	u2281
   439  007F  2881               	goto	u2280
   440  0080                     u2281:
   441  0080  288B               	goto	l2212
   442  0081                     u2280:
   443                           	
   444  0081                     l2210:	
   445  0081  3001               	movlw	01h
   446  0082  1283               	bcf	status, 5	;RP0=0, select bank0
   447  0083  1303               	bcf	status, 6	;RP1=0, select bank0
   448  0084  0620               	xorwf	(_collision),w
   449  0085  0421               	iorwf	(_collision+1),w
   450  0086  1D03               	skipz
   451  0087  2889               	goto	u2291
   452  0088  288A               	goto	u2290
   453  0089                     u2291:
   454  0089  2891               	goto	l2214
   455  008A                     u2290:
   456  008A  288B               	goto	l2212
   457                           	
   458  008B                     l874:	
   459                           	line	79
   460                           	
   461  008B                     l2212:	
   462                           ;spaceMission.c: 79: endMission();
   463  008B  120A  118A  211D   	fcall	_endMission
              120A  118A         
   464                           	line	80
   465                           ;spaceMission.c: 80: }else{
   466  0090  287B               	goto	l2208
   467                           	
   468  0091                     l872:	
   469                           	line	81
   470                           	
   471  0091                     l2214:	
   472                           ;spaceMission.c: 81: updateCountDown();
   473  0091  120A  118A  20D7   	fcall	_updateCountDown
              120A  118A         
   474                           	line	82
   475                           	
   476  0096                     l2216:	
   477                           ;spaceMission.c: 82: updatePoints();
   478  0096  120A  118A  211C   	fcall	_updatePoints
              120A  118A         
   479                           	line	83
   480                           	
   481  009B                     l2218:	
   482                           ;spaceMission.c: 83: updateSpace();
   483  009B  120A  118A  211B   	fcall	_updateSpace
              120A  118A         
   484                           	line	84
   485                           	
   486  00A0                     l2220:	
   487                           ;spaceMission.c: 84: updateAsteroidsSpeed();
   488  00A0  120A  118A  211A   	fcall	_updateAsteroidsSpeed
              120A  118A         
   489  00A5  287B               	goto	l2208
   490                           	line	85
   491                           	
   492  00A6                     l875:	
   493  00A6  287B               	goto	l2208
   494                           	line	86
   495                           	
   496  00A7                     l876:	
   497                           	line	75
   498  00A7  287B               	goto	l2208
   499                           	
   500  00A8                     l877:	
   501                           	line	87
   502                           	
   503  00A8                     l878:	
   504                           	global	start
   505  00A8  120A  118A  2812   	ljmp	start
   506                           	opt stack 0
   507                           GLOBAL	__end_of_main
   508  00AB                     	__end_of_main:
   509 ;; =============== function _main ends ============
   510                           
   511                           	signat	_main,90
   512                           	global	_updateCountDown
   513                           psect	text257,local,class=CODE,delta=2
   514                           global __ptext257
   515  00D7                     __ptext257:
   516                           
   517 ;; *************** function _updateCountDown *****************
   518 ;; Defined at:
   519 ;;		line 124 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;		None               void
   526 ;; Registers used:
   527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    2
   540 ;; This function calls:
   541 ;;		_sleep
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           psect	text257
   547                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   548                           	line	124
   549                           	global	__size_of_updateCountDown
   550  0027                     	__size_of_updateCountDown	equ	__end_of_updateCountDown-_updateCountDown
   551                           	
   552  00D7                     _updateCountDown:	
   553                           	opt	stack 5
   554                           ; Regs used in _updateCountDown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   555                           	line	126
   556                           	
   557  00D7                     l2188:	
   558                           ;spaceMission.c: 126: PORTD = map[digit0];
   559  00D7  0870               	movf	(_digit0),w
   560  00D8  3E01               	addlw	low((_map-__stringbase))
   561  00D9  0084               	movwf	fsr0
   562  00DA  120A  118A  2015   	fcall	stringdir
              120A  118A         
   563  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
   564  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
   565  00E1  0088               	movwf	(8)	;volatile
   566                           	line	127
   567                           	
   568  00E2                     l2190:	
   569                           ;spaceMission.c: 127: RA0=1;
   570  00E2  1405               	bsf	(40/8),(40)&7
   571                           	line	128
   572                           	
   573  00E3                     l2192:	
   574                           ;spaceMission.c: 128: sleep();
   575  00E3  120A  118A  20AB   	fcall	_sleep
              120A  118A         
   576                           	line	129
   577                           	
   578  00E8                     l2194:	
   579                           ;spaceMission.c: 129: RA0=0;
   580  00E8  1283               	bcf	status, 5	;RP0=0, select bank0
   581  00E9  1303               	bcf	status, 6	;RP1=0, select bank0
   582  00EA  1005               	bcf	(40/8),(40)&7
   583                           	line	131
   584                           	
   585  00EB                     l2196:	
   586                           ;spaceMission.c: 131: PORTD = map[digit1];
   587  00EB  0872               	movf	(_digit1),w
   588  00EC  3E01               	addlw	low((_map-__stringbase))
   589  00ED  0084               	movwf	fsr0
   590  00EE  120A  118A  2015   	fcall	stringdir
              120A  118A         
   591  00F3  0088               	movwf	(8)	;volatile
   592                           	line	132
   593                           	
   594  00F4                     l2198:	
   595                           ;spaceMission.c: 132: RA1=1;
   596  00F4  1485               	bsf	(41/8),(41)&7
   597                           	line	133
   598                           ;spaceMission.c: 133: sleep();
   599  00F5  120A  118A  20AB   	fcall	_sleep
              120A  118A         
   600                           	line	134
   601                           	
   602  00FA                     l2200:	
   603                           ;spaceMission.c: 134: RA1=0;
   604  00FA  1283               	bcf	status, 5	;RP0=0, select bank0
   605  00FB  1303               	bcf	status, 6	;RP1=0, select bank0
   606  00FC  1085               	bcf	(41/8),(41)&7
   607                           	line	135
   608                           	
   609  00FD                     l890:	
   610  00FD  0008               	return
   611                           	opt stack 0
   612                           GLOBAL	__end_of_updateCountDown
   613  00FE                     	__end_of_updateCountDown:
   614 ;; =============== function _updateCountDown ends ============
   615                           
   616                           	signat	_updateCountDown,88
   617                           	global	_sleep
   618                           psect	text258,local,class=CODE,delta=2
   619                           global __ptext258
   620  00AB                     __ptext258:
   621                           
   622 ;; *************** function _sleep *****************
   623 ;; Defined at:
   624 ;;		line 137 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  i               2    0[BANK0 ] int 
   629 ;; Return value:  Size  Location     Type
   630 ;;		None               void
   631 ;; Registers used:
   632 ;;		wreg, btemp+1
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       2       0       0       0
   640 ;;      Temps:          0       0       0       0       0
   641 ;;      Totals:         0       2       0       0       0
   642 ;;Total ram usage:        2 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; Hardware stack levels required when called:    1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_updateCountDown
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           psect	text258
   652                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   653                           	line	137
   654                           	global	__size_of_sleep
   655  002C                     	__size_of_sleep	equ	__end_of_sleep-_sleep
   656                           	
   657  00AB                     _sleep:	
   658                           	opt	stack 5
   659                           ; Regs used in _sleep: [wreg+btemp+1]
   660                           	line	138
   661                           	
   662  00AB                     l2178:	
   663                           ;spaceMission.c: 138: for(int i = 0; i < 256; i++);
   664  00AB  3000               	movlw	low(0)
   665  00AC  1283               	bcf	status, 5	;RP0=0, select bank0
   666  00AD  1303               	bcf	status, 6	;RP1=0, select bank0
   667  00AE  00A2               	movwf	(sleep@i)
   668  00AF  3000               	movlw	high(0)
   669  00B0  00A3               	movwf	((sleep@i))+1
   670                           	
   671  00B1                     l2180:	
   672  00B1  0823               	movf	(sleep@i+1),w
   673  00B2  3A80               	xorlw	80h
   674  00B3  00FF               	movwf	btemp+1
   675  00B4  3081               	movlw	(high(0100h))^80h
   676  00B5  027F               	subwf	btemp+1,w
   677  00B6  1D03               	skipz
   678  00B7  28BA               	goto	u2265
   679  00B8  3000               	movlw	low(0100h)
   680  00B9  0222               	subwf	(sleep@i),w
   681  00BA                     u2265:
   682                           
   683  00BA  1C03               	skipc
   684  00BB  28BD               	goto	u2261
   685  00BC  28BE               	goto	u2260
   686  00BD                     u2261:
   687  00BD  28C0               	goto	l2184
   688  00BE                     u2260:
   689  00BE  28D6               	goto	l895
   690                           	
   691  00BF                     l2182:	
   692  00BF  28D6               	goto	l895
   693                           	
   694  00C0                     l893:	
   695                           	
   696  00C0                     l2184:	
   697  00C0  3001               	movlw	low(01h)
   698  00C1  1283               	bcf	status, 5	;RP0=0, select bank0
   699  00C2  1303               	bcf	status, 6	;RP1=0, select bank0
   700  00C3  07A2               	addwf	(sleep@i),f
   701  00C4  1803               	skipnc
   702  00C5  0AA3               	incf	(sleep@i+1),f
   703  00C6  3000               	movlw	high(01h)
   704  00C7  07A3               	addwf	(sleep@i+1),f
   705                           	
   706  00C8                     l2186:	
   707  00C8  0823               	movf	(sleep@i+1),w
   708  00C9  3A80               	xorlw	80h
   709  00CA  00FF               	movwf	btemp+1
   710  00CB  3081               	movlw	(high(0100h))^80h
   711  00CC  027F               	subwf	btemp+1,w
   712  00CD  1D03               	skipz
   713  00CE  28D1               	goto	u2275
   714  00CF  3000               	movlw	low(0100h)
   715  00D0  0222               	subwf	(sleep@i),w
   716  00D1                     u2275:
   717                           
   718  00D1  1C03               	skipc
   719  00D2  28D4               	goto	u2271
   720  00D3  28D5               	goto	u2270
   721  00D4                     u2271:
   722  00D4  28C0               	goto	l2184
   723  00D5                     u2270:
   724  00D5  28D6               	goto	l895
   725                           	
   726  00D6                     l894:	
   727                           	line	139
   728                           	
   729  00D6                     l895:	
   730  00D6  0008               	return
   731                           	opt stack 0
   732                           GLOBAL	__end_of_sleep
   733  00D7                     	__end_of_sleep:
   734 ;; =============== function _sleep ends ============
   735                           
   736                           	signat	_sleep,88
   737                           	global	_updateAsteroidsSpeed
   738                           psect	text259,local,class=CODE,delta=2
   739                           global __ptext259
   740  011A                     __ptext259:
   741                           
   742 ;; *************** function _updateAsteroidsSpeed *****************
   743 ;; Defined at:
   744 ;;		line 90 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;		None               void
   751 ;; Registers used:
   752 ;;		None
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           psect	text259
   772                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   773                           	line	90
   774                           	global	__size_of_updateAsteroidsSpeed
   775  0001                     	__size_of_updateAsteroidsSpeed	equ	__end_of_updateAsteroidsSpeed-_updateAsteroidsSpeed
   776                           	
   777  011A                     _updateAsteroidsSpeed:	
   778                           	opt	stack 6
   779                           ; Regs used in _updateAsteroidsSpeed: []
   780                           	line	94
   781                           	
   782  011A                     l881:	
   783  011A  0008               	return
   784                           	opt stack 0
   785                           GLOBAL	__end_of_updateAsteroidsSpeed
   786  011B                     	__end_of_updateAsteroidsSpeed:
   787 ;; =============== function _updateAsteroidsSpeed ends ============
   788                           
   789                           	signat	_updateAsteroidsSpeed,88
   790                           	global	_updateSpace
   791                           psect	text260,local,class=CODE,delta=2
   792                           global __ptext260
   793  011B                     __ptext260:
   794                           
   795 ;; *************** function _updateSpace *****************
   796 ;; Defined at:
   797 ;;		line 97 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;		None               void
   804 ;; Registers used:
   805 ;;		None
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           psect	text260
   825                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   826                           	line	97
   827                           	global	__size_of_updateSpace
   828  0001                     	__size_of_updateSpace	equ	__end_of_updateSpace-_updateSpace
   829                           	
   830  011B                     _updateSpace:	
   831                           	opt	stack 6
   832                           ; Regs used in _updateSpace: []
   833                           	line	116
   834                           	
   835  011B                     l884:	
   836  011B  0008               	return
   837                           	opt stack 0
   838                           GLOBAL	__end_of_updateSpace
   839  011C                     	__end_of_updateSpace:
   840 ;; =============== function _updateSpace ends ============
   841                           
   842                           	signat	_updateSpace,88
   843                           	global	_updatePoints
   844                           psect	text261,local,class=CODE,delta=2
   845                           global __ptext261
   846  011C                     __ptext261:
   847                           
   848 ;; *************** function _updatePoints *****************
   849 ;; Defined at:
   850 ;;		line 119 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;		None               void
   857 ;; Registers used:
   858 ;;		None
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0
   867 ;;      Totals:         0       0       0       0       0
   868 ;;Total ram usage:        0 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           psect	text261
   878                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   879                           	line	119
   880                           	global	__size_of_updatePoints
   881  0001                     	__size_of_updatePoints	equ	__end_of_updatePoints-_updatePoints
   882                           	
   883  011C                     _updatePoints:	
   884                           	opt	stack 6
   885                           ; Regs used in _updatePoints: []
   886                           	line	121
   887                           	
   888  011C                     l887:	
   889  011C  0008               	return
   890                           	opt stack 0
   891                           GLOBAL	__end_of_updatePoints
   892  011D                     	__end_of_updatePoints:
   893 ;; =============== function _updatePoints ends ============
   894                           
   895                           	signat	_updatePoints,88
   896                           	global	_endMission
   897                           psect	text262,local,class=CODE,delta=2
   898                           global __ptext262
   899  011D                     __ptext262:
   900                           
   901 ;; *************** function _endMission *****************
   902 ;; Defined at:
   903 ;;		line 154 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;		None               void
   910 ;; Registers used:
   911 ;;		None
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0
   920 ;;      Totals:         0       0       0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           psect	text262
   931                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   932                           	line	154
   933                           	global	__size_of_endMission
   934  0001                     	__size_of_endMission	equ	__end_of_endMission-_endMission
   935                           	
   936  011D                     _endMission:	
   937                           	opt	stack 6
   938                           ; Regs used in _endMission: []
   939                           	line	156
   940                           	
   941  011D                     l901:	
   942  011D  0008               	return
   943                           	opt stack 0
   944                           GLOBAL	__end_of_endMission
   945  011E                     	__end_of_endMission:
   946 ;; =============== function _endMission ends ============
   947                           
   948                           	signat	_endMission,88
   949                           	global	_initCountDown
   950                           psect	text263,local,class=CODE,delta=2
   951                           global __ptext263
   952  00FE                     __ptext263:
   953                           
   954 ;; *************** function _initCountDown *****************
   955 ;; Defined at:
   956 ;;		line 140 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;		None               void
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           psect	text263
   984                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
   985                           	line	140
   986                           	global	__size_of_initCountDown
   987  000F                     	__size_of_initCountDown	equ	__end_of_initCountDown-_initCountDown
   988                           	
   989  00FE                     _initCountDown:	
   990                           	opt	stack 6
   991                           ; Regs used in _initCountDown: [wreg+status,2+status,0]
   992                           	line	142
   993                           	
   994  00FE                     l2174:	
   995                           ;spaceMission.c: 142: T0CS=0;
   996  00FE  1683               	bsf	status, 5	;RP0=1, select bank1
   997  00FF  1303               	bcf	status, 6	;RP1=0, select bank1
   998  0100  1281               	bcf	(1037/8)^080h,(1037)&7
   999                           	line	143
  1000                           ;spaceMission.c: 143: PSA=0;
  1001  0101  1181               	bcf	(1035/8)^080h,(1035)&7
  1002                           	line	145
  1003                           ;spaceMission.c: 145: PS2=1; PS1=1; PS0=1;
  1004  0102  1501               	bsf	(1034/8)^080h,(1034)&7
  1005  0103  1481               	bsf	(1033/8)^080h,(1033)&7
  1006  0104  1401               	bsf	(1032/8)^080h,(1032)&7
  1007                           	line	147
  1008                           ;spaceMission.c: 147: T0IF=0;
  1009  0105  110B               	bcf	(90/8),(90)&7
  1010                           	line	148
  1011                           ;spaceMission.c: 148: T0IE=1;
  1012  0106  168B               	bsf	(93/8),(93)&7
  1013                           	line	150
  1014                           	
  1015  0107                     l2176:	
  1016                           ;spaceMission.c: 150: divider=0;
  1017  0107  1003               	clrc
  1018  0108  3000               	movlw	0
  1019  0109  1803               	btfsc	status,0
  1020  010A  3001               	movlw	1
  1021  010B  00F6               	movwf	(_divider)
  1022                           	line	151
  1023                           	
  1024  010C                     l898:	
  1025  010C  0008               	return
  1026                           	opt stack 0
  1027                           GLOBAL	__end_of_initCountDown
  1028  010D                     	__end_of_initCountDown:
  1029 ;; =============== function _initCountDown ends ============
  1030                           
  1031                           	signat	_initCountDown,88
  1032                           	global	_isr
  1033                           psect	text264,local,class=CODE,delta=2
  1034                           global __ptext264
  1035  0025                     __ptext264:
  1036                           
  1037 ;; *************** function _isr *****************
  1038 ;; Defined at:
  1039 ;;		line 29 in file "C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;		None               void
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0
  1055 ;;      Temps:          5       0       0       0       0
  1056 ;;      Totals:         5       0       0       0       0
  1057 ;;Total ram usage:        5 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		Interrupt level 1
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           psect	text264
  1066                           	file	"C:\Users\Matt\Dropbox\Progetto microcontrollers (Zappa)\spaceMission.c"
  1067                           	line	29
  1068                           	global	__size_of_isr
  1069  0048                     	__size_of_isr	equ	__end_of_isr-_isr
  1070                           	
  1071  0025                     _isr:	
  1072                           	opt	stack 5
  1073                           ; Regs used in _isr: [wreg+status,2+status,0]
  1074                           psect	intentry,class=CODE,delta=2
  1075                           global __pintentry
  1076  0004                     __pintentry:
  1077                           global interrupt_function
  1078  0004                     interrupt_function:
  1079                           	global saved_w
  1080  007E                     	saved_w	set	btemp+0
  1081  0004  00FE               	movwf	saved_w
  1082  0005  0803               	movf	status,w
  1083  0006  00F8               	movwf	(??_isr+1)
  1084  0007  0804               	movf	fsr0,w
  1085  0008  00F9               	movwf	(??_isr+2)
  1086  0009  080A               	movf	pclath,w
  1087  000A  00FA               	movwf	(??_isr+3)
  1088  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1089  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1090  000D  087F               	movf	btemp+1,w
  1091  000E  00FB               	movwf	(??_isr+4)
  1092  000F  120A  118A  2825   	ljmp	_isr
  1093                           psect	text264
  1094                           	line	31
  1095                           	
  1096  0025                     i1l1270:	
  1097                           ;spaceMission.c: 31: GIE=0;
  1098  0025  138B               	bcf	(95/8),(95)&7
  1099                           	line	38
  1100                           ;spaceMission.c: 38: if (T0IF == 1){
  1101  0026  1D0B               	btfss	(90/8),(90)&7
  1102  0027  2829               	goto	u1_21
  1103  0028  282A               	goto	u1_20
  1104  0029                     u1_21:
  1105  0029  2861               	goto	i1l1290
  1106  002A                     u1_20:
  1107                           	line	39
  1108                           	
  1109  002A                     i1l1272:	
  1110                           ;spaceMission.c: 39: T0IF=0;
  1111  002A  110B               	bcf	(90/8),(90)&7
  1112                           	line	40
  1113                           	
  1114  002B                     i1l1274:	
  1115                           ;spaceMission.c: 40: if (divider==25){
  1116  002B  0876               	movf	(_divider),w
  1117  002C  3A19               	xorlw	019h
  1118  002D  1D03               	skipz
  1119  002E  2830               	goto	u2_21
  1120  002F  2831               	goto	u2_20
  1121  0030                     u2_21:
  1122  0030  285B               	goto	i1l1288
  1123  0031                     u2_20:
  1124                           	line	41
  1125                           	
  1126  0031                     i1l1276:	
  1127                           ;spaceMission.c: 41: divider=0;
  1128  0031  1003               	clrc
  1129  0032  3000               	movlw	0
  1130  0033  1803               	btfsc	status,0
  1131  0034  3001               	movlw	1
  1132  0035  00F6               	movwf	(_divider)
  1133                           	line	43
  1134                           	
  1135  0036                     i1l1278:	
  1136                           ;spaceMission.c: 43: if(digit0 == 0){
  1137  0036  0871               	movf	((_digit0+1)),w
  1138  0037  0470               	iorwf	((_digit0)),w
  1139  0038  1D03               	skipz
  1140  0039  283B               	goto	u3_21
  1141  003A  283C               	goto	u3_20
  1142  003B                     u3_21:
  1143  003B  2853               	goto	i1l1286
  1144  003C                     u3_20:
  1145                           	line	44
  1146                           	
  1147  003C                     i1l1280:	
  1148                           ;spaceMission.c: 44: if(digit1 == 0){
  1149  003C  0873               	movf	((_digit1+1)),w
  1150  003D  0472               	iorwf	((_digit1)),w
  1151  003E  1D03               	skipz
  1152  003F  2841               	goto	u4_21
  1153  0040  2842               	goto	u4_20
  1154  0041                     u4_21:
  1155  0041  2847               	goto	i1l1284
  1156  0042                     u4_20:
  1157                           	line	46
  1158                           	
  1159  0042                     i1l1282:	
  1160                           ;spaceMission.c: 46: endGame = 1;
  1161  0042  3001               	movlw	low(01h)
  1162  0043  00F4               	movwf	(_endGame)
  1163  0044  3000               	movlw	high(01h)
  1164  0045  00F5               	movwf	((_endGame))+1
  1165                           	line	47
  1166                           ;spaceMission.c: 47: }else{
  1167  0046  2861               	goto	i1l1290
  1168                           	
  1169  0047                     i1l864:	
  1170                           	line	49
  1171                           	
  1172  0047                     i1l1284:	
  1173                           ;spaceMission.c: 49: digit1--;
  1174  0047  3001               	movlw	low(01h)
  1175  0048  02F2               	subwf	(_digit1),f
  1176  0049  3000               	movlw	high(01h)
  1177  004A  1C03               	skipc
  1178  004B  03F3               	decf	(_digit1+1),f
  1179  004C  02F3               	subwf	(_digit1+1),f
  1180                           	line	50
  1181                           ;spaceMission.c: 50: digit0 = 9;
  1182  004D  3009               	movlw	low(09h)
  1183  004E  00F0               	movwf	(_digit0)
  1184  004F  3000               	movlw	high(09h)
  1185  0050  00F1               	movwf	((_digit0))+1
  1186  0051  2861               	goto	i1l1290
  1187                           	line	51
  1188                           	
  1189  0052                     i1l865:	
  1190                           	line	52
  1191                           ;spaceMission.c: 51: }
  1192                           ;spaceMission.c: 52: }else
  1193  0052  2861               	goto	i1l1290
  1194                           	
  1195  0053                     i1l863:	
  1196                           	line	53
  1197                           	
  1198  0053                     i1l1286:	
  1199                           ;spaceMission.c: 53: digit0--;
  1200  0053  3001               	movlw	low(01h)
  1201  0054  02F0               	subwf	(_digit0),f
  1202  0055  3000               	movlw	high(01h)
  1203  0056  1C03               	skipc
  1204  0057  03F1               	decf	(_digit0+1),f
  1205  0058  02F1               	subwf	(_digit0+1),f
  1206  0059  2861               	goto	i1l1290
  1207                           	
  1208  005A                     i1l866:	
  1209                           	line	54
  1210                           ;spaceMission.c: 54: }
  1211  005A  2861               	goto	i1l1290
  1212                           	line	55
  1213                           	
  1214  005B                     i1l862:	
  1215                           	line	56
  1216                           	
  1217  005B                     i1l1288:	
  1218                           ;spaceMission.c: 55: else
  1219                           ;spaceMission.c: 56: divider++;
  1220  005B  3001               	movlw	(01h)
  1221  005C  00F7               	movwf	(??_isr+0)+0
  1222  005D  0877               	movf	(??_isr+0)+0,w
  1223  005E  07F6               	addwf	(_divider),f
  1224  005F  2861               	goto	i1l1290
  1225                           	
  1226  0060                     i1l867:	
  1227  0060  2861               	goto	i1l1290
  1228                           	line	57
  1229                           	
  1230  0061                     i1l861:	
  1231                           	line	58
  1232                           	
  1233  0061                     i1l1290:	
  1234                           ;spaceMission.c: 57: }
  1235                           ;spaceMission.c: 58: GIE=1;
  1236  0061  178B               	bsf	(95/8),(95)&7
  1237                           	line	59
  1238                           	
  1239  0062                     i1l868:	
  1240  0062  087B               	movf	(??_isr+4),w
  1241  0063  00FF               	movwf	btemp+1
  1242  0064  087A               	movf	(??_isr+3),w
  1243  0065  008A               	movwf	pclath
  1244  0066  0879               	movf	(??_isr+2),w
  1245  0067  0084               	movwf	fsr0
  1246  0068  0878               	movf	(??_isr+1),w
  1247  0069  0083               	movwf	status
  1248  006A  0EFE               	swapf	saved_w,f
  1249  006B  0E7E               	swapf	saved_w,w
  1250  006C  0009               	retfie
  1251                           	opt stack 0
  1252                           GLOBAL	__end_of_isr
  1253  006D                     	__end_of_isr:
  1254 ;; =============== function _isr ends ============
  1255                           
  1256                           	signat	_isr,88
  1257                           psect	text265,local,class=CODE,delta=2
  1258                           global __ptext265
  1259  0000                     __ptext265:
  1260                           	global	btemp
  1261  007E                     	btemp set 07Eh
  1262                           
  1263                           	DABS	1,126,2	;btemp
  1264                           	global	wtemp0
  1265  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Fri Mar 21 11:03:43 2014

                            pc 0002                             fsr 0004                            l901 011D  
                          l871 007B                            l872 0091                            l881 011A  
                          l890 00FD                            l874 008B                            l875 00A6  
                          l884 011B                            l876 00A7                            l893 00C0  
                          l877 00A8                            l894 00D6                            l878 00A8  
                          l887 011C                            l895 00D6                            l898 010C  
                          _GIE 005F                            _RA0 0028                            _RA1 0029  
                          _PS0 0408                            _PS1 0409                            _PS2 040A  
                          _PSA 040B                            _map 001B                            _isr 0025  
                          fsr0 0004                           l2200 00FA                           l2210 0081  
                         l2202 006D                           l2220 00A0                           l2212 008B  
                         l2204 0074                           l2214 0091                           l2206 0079  
                         l2216 0096                           l2208 007B                           l2218 009B  
                         l2180 00B1                           l2174 00FE                           l2182 00BF  
                         l2190 00E2                           l2176 0107                           l2184 00C0  
                         l2192 00E3                           l2186 00C8                           l2178 00AB  
                         l2194 00E8                           l2196 00EB                           l2188 00D7  
                         l2198 00F4                           ?_isr 0077                           _T0IE 005D  
                         _T0IF 005A                           _T0CS 040D                           u2260 00BE  
                         u2261 00BD                           u2270 00D5                           u2271 00D4  
                         u2280 0081                           u2265 00BA                           u2281 0080  
                         u2290 008A                           u2275 00D1                           u2291 0089  
                         u1_20 002A                           u1_21 0029                           u2_20 0031  
                         u2_21 0030                           u3_20 003C                           u3_21 003B  
                         u4_20 0042                           u4_21 0041                           _main 006D  
                         btemp 007E                           start 0012        __end_of_updateCountDown 00FE  
                        ??_isr 0077                          ?_main 0077                          _ANSEL 0188  
                        i1l861 0061                          i1l862 005B                          i1l863 0053  
                        i1l864 0047                          i1l865 0052                          i1l866 005A  
                        i1l867 0060                          i1l868 0062                          _PORTD 0008  
                        _TRISD 0088                          _sleep 00AB                          pclath 000A  
       __size_of_initCountDown 000F                          status 0003                          wtemp0 007E  
                 __end_of_main 00AB           _updateAsteroidsSpeed 011A                         ??_main 0024  
                       ?_sleep 0077                         _ANSELH 0189                         i1l1270 0025  
                       i1l1280 003C                         i1l1272 002A                         i1l1282 0042  
                       i1l1274 002B                         i1l1290 0061                         i1l1284 0047  
                       i1l1276 0031                         i1l1286 0053                         i1l1278 0036  
                       i1l1288 005B               ?_updateCountDown 0077          ?_updateAsteroidsSpeed 0077  
                       _digit0 0070                         _digit1 0072                  _initCountDown 00FE  
                       saved_w 007E                         sleep@i 0022                   ?_updateSpace 0077  
               __pcstackCOMMON 0077                 ?_initCountDown 0077                  __end_of_sleep 00D7  
                      ??_sleep 0022                     __pbssBANK0 0020         ??_updateAsteroidsSpeed 0022  
                   __pmaintext 006D                     _endMission 011D                     __pintentry 0004  
              ??_initCountDown 0022                        _endGame 0074                        _divider 0076  
                 __size_of_isr 0048           end_of_initialization 0116                    ?_endMission 0077  
         __size_of_updateSpace 0001                  ?_updatePoints 0077       __size_of_updateCountDown 0027  
          start_initialization 010D                    __end_of_isr 006D            __size_of_endMission 0001  
               ??_updatePoints 0022                    __pbssCOMMON 0070                  __pcstackBANK0 0022  
                    __ptext260 011B                      __ptext261 011C                      __ptext262 011D  
                    __ptext263 00FE                      __ptext264 0025                      __ptext265 0000  
                    __ptext257 00D7                      __ptext258 00AB                      __ptext259 011A  
__size_of_updateAsteroidsSpeed 0001                      __pstrings 0015                      _collision 0020  
            ??_updateCountDown 0024                 __size_of_sleep 002C              interrupt_function 0004  
                 ??_endMission 0022          __end_of_initCountDown 010D                    __stringbase 001A  
         __end_of_updatePoints 011D             __end_of_endMission 011E                  ??_updateSpace 0022  
                __size_of_main 003E            __end_of_updateSpace 011C                       intlevel1 0000  
                    stringcode 0015                _updateCountDown 00D7          __size_of_updatePoints 0001  
                     stringdir 0015                       stringtab 0015   __end_of_updateAsteroidsSpeed 011B  
                 _updatePoints 011C                    _updateSpace 011B  
